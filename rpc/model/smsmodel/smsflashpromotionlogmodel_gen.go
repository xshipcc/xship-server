// Code generated by goctl. DO NOT EDIT.

package smsmodel

import (
	"context"
	"database/sql"
	"fmt"
	"strings"
	"time"

	"github.com/zeromicro/go-zero/core/stores/builder"
	"github.com/zeromicro/go-zero/core/stores/sqlc"
	"github.com/zeromicro/go-zero/core/stores/sqlx"
	"github.com/zeromicro/go-zero/core/stringx"
)

var (
	smsFlashPromotionLogFieldNames          = builder.RawFieldNames(&SmsFlashPromotionLog{})
	smsFlashPromotionLogRows                = strings.Join(smsFlashPromotionLogFieldNames, ",")
	smsFlashPromotionLogRowsExpectAutoSet   = strings.Join(stringx.Remove(smsFlashPromotionLogFieldNames, "`id`", "`create_at`", "`create_time`", "`created_at`", "`update_at`", "`update_time`", "`updated_at`"), ",")
	smsFlashPromotionLogRowsWithPlaceHolder = strings.Join(stringx.Remove(smsFlashPromotionLogFieldNames, "`id`", "`create_at`", "`create_time`", "`created_at`", "`update_at`", "`update_time`", "`updated_at`"), "=?,") + "=?"
)

type (
	smsFlashPromotionLogModel interface {
		Insert(ctx context.Context, data *SmsFlashPromotionLog) (sql.Result, error)
		FindOne(ctx context.Context, id int64) (*SmsFlashPromotionLog, error)
		Update(ctx context.Context, data *SmsFlashPromotionLog) error
		Delete(ctx context.Context, id int64) error
	}

	defaultSmsFlashPromotionLogModel struct {
		conn  sqlx.SqlConn
		table string
	}

	SmsFlashPromotionLog struct {
		Id            int64     `db:"id"`             // 编号
		MemberId      int64     `db:"member_id"`      // 会员id
		ProductId     int64     `db:"product_id"`     // 商品id
		MemberPhone   string    `db:"member_phone"`   // 会员电话
		ProductName   string    `db:"product_name"`   // 商品名称
		SubscribeTime time.Time `db:"subscribe_time"` // 会员订阅时间
		SendTime      time.Time `db:"send_time"`      // 发送时间
	}
)

func newSmsFlashPromotionLogModel(conn sqlx.SqlConn) *defaultSmsFlashPromotionLogModel {
	return &defaultSmsFlashPromotionLogModel{
		conn:  conn,
		table: "`sms_flash_promotion_log`",
	}
}

func (m *defaultSmsFlashPromotionLogModel) Delete(ctx context.Context, id int64) error {
	query := fmt.Sprintf("delete from %s where `id` = ?", m.table)
	_, err := m.conn.ExecCtx(ctx, query, id)
	return err
}

func (m *defaultSmsFlashPromotionLogModel) FindOne(ctx context.Context, id int64) (*SmsFlashPromotionLog, error) {
	query := fmt.Sprintf("select %s from %s where `id` = ? limit 1", smsFlashPromotionLogRows, m.table)
	var resp SmsFlashPromotionLog
	err := m.conn.QueryRowCtx(ctx, &resp, query, id)
	switch err {
	case nil:
		return &resp, nil
	case sqlc.ErrNotFound:
		return nil, ErrNotFound
	default:
		return nil, err
	}
}

func (m *defaultSmsFlashPromotionLogModel) Insert(ctx context.Context, data *SmsFlashPromotionLog) (sql.Result, error) {
	query := fmt.Sprintf("insert into %s (%s) values (?, ?, ?, ?, ?, ?)", m.table, smsFlashPromotionLogRowsExpectAutoSet)
	ret, err := m.conn.ExecCtx(ctx, query, data.MemberId, data.ProductId, data.MemberPhone, data.ProductName, data.SubscribeTime, data.SendTime)
	return ret, err
}

func (m *defaultSmsFlashPromotionLogModel) Update(ctx context.Context, data *SmsFlashPromotionLog) error {
	query := fmt.Sprintf("update %s set %s where `id` = ?", m.table, smsFlashPromotionLogRowsWithPlaceHolder)
	_, err := m.conn.ExecCtx(ctx, query, data.MemberId, data.ProductId, data.MemberPhone, data.ProductName, data.SubscribeTime, data.SendTime, data.Id)
	return err
}

func (m *defaultSmsFlashPromotionLogModel) tableName() string {
	return m.table
}
