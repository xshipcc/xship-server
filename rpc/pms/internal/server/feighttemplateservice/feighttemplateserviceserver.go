// Code generated by goctl. DO NOT EDIT.
// Source: pms.proto

package server

import (
	"context"

	"zero-admin/rpc/pms/internal/logic/feighttemplateservice"
	"zero-admin/rpc/pms/internal/svc"
	"zero-admin/rpc/pms/pmsclient"
)

type FeightTemplateServiceServer struct {
	svcCtx *svc.ServiceContext
	pmsclient.UnimplementedFeightTemplateServiceServer
}

func NewFeightTemplateServiceServer(svcCtx *svc.ServiceContext) *FeightTemplateServiceServer {
	return &FeightTemplateServiceServer{
		svcCtx: svcCtx,
	}
}

func (s *FeightTemplateServiceServer) FeightTemplateAdd(ctx context.Context, in *pmsclient.FeightTemplateAddReq) (*pmsclient.FeightTemplateAddResp, error) {
	l := feighttemplateservicelogic.NewFeightTemplateAddLogic(ctx, s.svcCtx)
	return l.FeightTemplateAdd(in)
}

func (s *FeightTemplateServiceServer) FeightTemplateList(ctx context.Context, in *pmsclient.FeightTemplateListReq) (*pmsclient.FeightTemplateListResp, error) {
	l := feighttemplateservicelogic.NewFeightTemplateListLogic(ctx, s.svcCtx)
	return l.FeightTemplateList(in)
}

func (s *FeightTemplateServiceServer) FeightTemplateUpdate(ctx context.Context, in *pmsclient.FeightTemplateUpdateReq) (*pmsclient.FeightTemplateUpdateResp, error) {
	l := feighttemplateservicelogic.NewFeightTemplateUpdateLogic(ctx, s.svcCtx)
	return l.FeightTemplateUpdate(in)
}

func (s *FeightTemplateServiceServer) FeightTemplateDelete(ctx context.Context, in *pmsclient.FeightTemplateDeleteReq) (*pmsclient.FeightTemplateDeleteResp, error) {
	l := feighttemplateservicelogic.NewFeightTemplateDeleteLogic(ctx, s.svcCtx)
	return l.FeightTemplateDelete(in)
}
