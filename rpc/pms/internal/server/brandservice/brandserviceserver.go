// Code generated by goctl. DO NOT EDIT.
// Source: pms.proto

package server

import (
	"context"

	"zero-admin/rpc/pms/internal/logic/brandservice"
	"zero-admin/rpc/pms/internal/svc"
	"zero-admin/rpc/pms/pmsclient"
)

type BrandServiceServer struct {
	svcCtx *svc.ServiceContext
	pmsclient.UnimplementedBrandServiceServer
}

func NewBrandServiceServer(svcCtx *svc.ServiceContext) *BrandServiceServer {
	return &BrandServiceServer{
		svcCtx: svcCtx,
	}
}

func (s *BrandServiceServer) BrandAdd(ctx context.Context, in *pmsclient.BrandAddReq) (*pmsclient.BrandAddResp, error) {
	l := brandservicelogic.NewBrandAddLogic(ctx, s.svcCtx)
	return l.BrandAdd(in)
}

func (s *BrandServiceServer) BrandList(ctx context.Context, in *pmsclient.BrandListReq) (*pmsclient.BrandListResp, error) {
	l := brandservicelogic.NewBrandListLogic(ctx, s.svcCtx)
	return l.BrandList(in)
}

func (s *BrandServiceServer) BrandListByIds(ctx context.Context, in *pmsclient.BrandListByIdsReq) (*pmsclient.BrandListResp, error) {
	l := brandservicelogic.NewBrandListByIdsLogic(ctx, s.svcCtx)
	return l.BrandListByIds(in)
}

func (s *BrandServiceServer) BrandUpdate(ctx context.Context, in *pmsclient.BrandUpdateReq) (*pmsclient.BrandUpdateResp, error) {
	l := brandservicelogic.NewBrandUpdateLogic(ctx, s.svcCtx)
	return l.BrandUpdate(in)
}

func (s *BrandServiceServer) BrandDelete(ctx context.Context, in *pmsclient.BrandDeleteReq) (*pmsclient.BrandDeleteResp, error) {
	l := brandservicelogic.NewBrandDeleteLogic(ctx, s.svcCtx)
	return l.BrandDelete(in)
}
