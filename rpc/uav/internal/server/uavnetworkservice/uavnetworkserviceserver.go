// Code generated by goctl. DO NOT EDIT.
// Source: uav.proto

package server

import (
	"context"

	"zero-admin/rpc/uav/internal/logic/uavnetworkservice"
	"zero-admin/rpc/uav/internal/svc"
	"zero-admin/rpc/uav/uavlient"
)

type UavNetworkServiceServer struct {
	svcCtx *svc.ServiceContext
	uavlient.UnimplementedUavNetworkServiceServer
}

func NewUavNetworkServiceServer(svcCtx *svc.ServiceContext) *UavNetworkServiceServer {
	return &UavNetworkServiceServer{
		svcCtx: svcCtx,
	}
}

func (s *UavNetworkServiceServer) UavNetworkAdd(ctx context.Context, in *uavlient.AddUavNetworkReq) (*uavlient.UavNetworkAddResp, error) {
	l := uavnetworkservicelogic.NewUavNetworkAddLogic(ctx, s.svcCtx)
	return l.UavNetworkAdd(in)
}

func (s *UavNetworkServiceServer) UavNetworkList(ctx context.Context, in *uavlient.ListUavNetworkReq) (*uavlient.ListUavNetworkResp, error) {
	l := uavnetworkservicelogic.NewUavNetworkListLogic(ctx, s.svcCtx)
	return l.UavNetworkList(in)
}

func (s *UavNetworkServiceServer) UavNetworkUpdate(ctx context.Context, in *uavlient.UpdateUavNetworkReq) (*uavlient.UpdateUavNetworkResp, error) {
	l := uavnetworkservicelogic.NewUavNetworkUpdateLogic(ctx, s.svcCtx)
	return l.UavNetworkUpdate(in)
}

func (s *UavNetworkServiceServer) UavNetworkFindById(ctx context.Context, in *uavlient.UavNetworkFindByIdReq) (*uavlient.ListUavNetworkResp, error) {
	l := uavnetworkservicelogic.NewUavNetworkFindByIdLogic(ctx, s.svcCtx)
	return l.UavNetworkFindById(in)
}
