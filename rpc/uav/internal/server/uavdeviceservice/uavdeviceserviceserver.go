// Code generated by goctl. DO NOT EDIT.
// Source: uav.proto

package server

import (
	"context"

	"zero-admin/rpc/uav/internal/logic/uavdeviceservice"
	"zero-admin/rpc/uav/internal/svc"
	"zero-admin/rpc/uav/uavlient"
)

type UavDeviceServiceServer struct {
	svcCtx *svc.ServiceContext
	uavlient.UnimplementedUavDeviceServiceServer
}

func NewUavDeviceServiceServer(svcCtx *svc.ServiceContext) *UavDeviceServiceServer {
	return &UavDeviceServiceServer{
		svcCtx: svcCtx,
	}
}

// 添加设备
func (s *UavDeviceServiceServer) UavDeviceAdd(ctx context.Context, in *uavlient.UavDeviceAddReq) (*uavlient.UavDeviceAddResp, error) {
	l := uavdeviceservicelogic.NewUavDeviceAddLogic(ctx, s.svcCtx)
	return l.UavDeviceAdd(in)
}

// 获取设备列表
func (s *UavDeviceServiceServer) UavDeviceList(ctx context.Context, in *uavlient.UavDeviceListReq) (*uavlient.UavDeviceListResp, error) {
	l := uavdeviceservicelogic.NewUavDeviceListLogic(ctx, s.svcCtx)
	return l.UavDeviceList(in)
}

// 修改设备表
func (s *UavDeviceServiceServer) UavDeviceUpdate(ctx context.Context, in *uavlient.UavDeviceAddReq) (*uavlient.UavDeviceAddResp, error) {
	l := uavdeviceservicelogic.NewUavDeviceUpdateLogic(ctx, s.svcCtx)
	return l.UavDeviceUpdate(in)
}

// 根据设备d查询报警
func (s *UavDeviceServiceServer) UavDeviceFindById(ctx context.Context, in *uavlient.UavDeviceFindByIdReq) (*uavlient.UavDeviceFindByIdResp, error) {
	l := uavdeviceservicelogic.NewUavDeviceFindByIdLogic(ctx, s.svcCtx)
	return l.UavDeviceFindById(in)
}

// 根据设备ids查询报警
func (s *UavDeviceServiceServer) UavDeviceFindByIds(ctx context.Context, in *uavlient.UavDeviceFindByIdsReq) (*uavlient.UavDeviceFindByIdsResp, error) {
	l := uavdeviceservicelogic.NewUavDeviceFindByIdsLogic(ctx, s.svcCtx)
	return l.UavDeviceFindByIds(in)
}
