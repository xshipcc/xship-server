// Code generated by goctl. DO NOT EDIT.
// Source: uav.proto

package server

import (
	"context"

	"zero-admin/rpc/uav/internal/logic/uavflyservice"
	"zero-admin/rpc/uav/internal/svc"
	"zero-admin/rpc/uav/uavlient"
)

type UavFlyServiceServer struct {
	svcCtx *svc.ServiceContext
	uavlient.UnimplementedUavFlyServiceServer
}

func NewUavFlyServiceServer(svcCtx *svc.ServiceContext) *UavFlyServiceServer {
	return &UavFlyServiceServer{
		svcCtx: svcCtx,
	}
}

// 添加设备
func (s *UavFlyServiceServer) UavFlyAdd(ctx context.Context, in *uavlient.AddUavFlyReq) (*uavlient.UavFlyAddResp, error) {
	l := uavflyservicelogic.NewUavFlyAddLogic(ctx, s.svcCtx)
	return l.UavFlyAdd(in)
}

// 获取设备列表
func (s *UavFlyServiceServer) UavFlyList(ctx context.Context, in *uavlient.ListUavFlyReq) (*uavlient.ListUavFlyResp, error) {
	l := uavflyservicelogic.NewUavFlyListLogic(ctx, s.svcCtx)
	return l.UavFlyList(in)
}

// 修改设备表
func (s *UavFlyServiceServer) UavFlyUpdate(ctx context.Context, in *uavlient.UpdateUavFlyReq) (*uavlient.UpdateUavFlyResp, error) {
	l := uavflyservicelogic.NewUavFlyUpdateLogic(ctx, s.svcCtx)
	return l.UavFlyUpdate(in)
}

// 根据设备d查询报警
func (s *UavFlyServiceServer) UavFlyFindById(ctx context.Context, in *uavlient.UavFlyFindByIdReq) (*uavlient.ListUavFlyResp, error) {
	l := uavflyservicelogic.NewUavFlyFindByIdLogic(ctx, s.svcCtx)
	return l.UavFlyFindById(in)
}
