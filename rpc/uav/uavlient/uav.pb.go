// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v4.24.3
// source: uav.proto

package uavlient

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// 无人机设备
type UavDeviceAddReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         int64  `protobuf:"varint,1,opt,name=Id,proto3" json:"Id,omitempty"`
	Name       string `protobuf:"bytes,2,opt,name=Name,proto3" json:"Name,omitempty"`
	Ip         string `protobuf:"bytes,3,opt,name=Ip,proto3" json:"Ip,omitempty"`
	Port       int64  `protobuf:"varint,4,opt,name=Port,proto3" json:"Port,omitempty"`
	HangarIp   string `protobuf:"bytes,5,opt,name=Hangar_ip,json=HangarIp,proto3" json:"Hangar_ip,omitempty"`
	HangarPort int64  `protobuf:"varint,6,opt,name=Hangar_port,json=HangarPort,proto3" json:"Hangar_port,omitempty"`
}

func (x *UavDeviceAddReq) Reset() {
	*x = UavDeviceAddReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_uav_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UavDeviceAddReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UavDeviceAddReq) ProtoMessage() {}

func (x *UavDeviceAddReq) ProtoReflect() protoreflect.Message {
	mi := &file_uav_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UavDeviceAddReq.ProtoReflect.Descriptor instead.
func (*UavDeviceAddReq) Descriptor() ([]byte, []int) {
	return file_uav_proto_rawDescGZIP(), []int{0}
}

func (x *UavDeviceAddReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UavDeviceAddReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UavDeviceAddReq) GetIp() string {
	if x != nil {
		return x.Ip
	}
	return ""
}

func (x *UavDeviceAddReq) GetPort() int64 {
	if x != nil {
		return x.Port
	}
	return 0
}

func (x *UavDeviceAddReq) GetHangarIp() string {
	if x != nil {
		return x.HangarIp
	}
	return ""
}

func (x *UavDeviceAddReq) GetHangarPort() int64 {
	if x != nil {
		return x.HangarPort
	}
	return 0
}

type UavDeviceAddResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pong string `protobuf:"bytes,1,opt,name=pong,proto3" json:"pong,omitempty"`
}

func (x *UavDeviceAddResp) Reset() {
	*x = UavDeviceAddResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_uav_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UavDeviceAddResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UavDeviceAddResp) ProtoMessage() {}

func (x *UavDeviceAddResp) ProtoReflect() protoreflect.Message {
	mi := &file_uav_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UavDeviceAddResp.ProtoReflect.Descriptor instead.
func (*UavDeviceAddResp) Descriptor() ([]byte, []int) {
	return file_uav_proto_rawDescGZIP(), []int{1}
}

func (x *UavDeviceAddResp) GetPong() string {
	if x != nil {
		return x.Pong
	}
	return ""
}

type UavDeviceListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Current  int64 `protobuf:"varint,1,opt,name=current,proto3" json:"current,omitempty"`
	PageSize int64 `protobuf:"varint,2,opt,name=pageSize,proto3" json:"pageSize,omitempty"`
}

func (x *UavDeviceListReq) Reset() {
	*x = UavDeviceListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_uav_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UavDeviceListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UavDeviceListReq) ProtoMessage() {}

func (x *UavDeviceListReq) ProtoReflect() protoreflect.Message {
	mi := &file_uav_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UavDeviceListReq.ProtoReflect.Descriptor instead.
func (*UavDeviceListReq) Descriptor() ([]byte, []int) {
	return file_uav_proto_rawDescGZIP(), []int{2}
}

func (x *UavDeviceListReq) GetCurrent() int64 {
	if x != nil {
		return x.Current
	}
	return 0
}

func (x *UavDeviceListReq) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

type UavDeviceListData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         int64  `protobuf:"varint,1,opt,name=Id,proto3" json:"Id,omitempty"`
	Name       string `protobuf:"bytes,2,opt,name=Name,proto3" json:"Name,omitempty"`
	Ip         string `protobuf:"bytes,3,opt,name=Ip,proto3" json:"Ip,omitempty"`
	Port       int64  `protobuf:"varint,4,opt,name=Port,proto3" json:"Port,omitempty"`
	HangarIp   string `protobuf:"bytes,5,opt,name=Hangar_ip,json=HangarIp,proto3" json:"Hangar_ip,omitempty"`
	HangarPort int64  `protobuf:"varint,6,opt,name=Hangar_port,json=HangarPort,proto3" json:"Hangar_port,omitempty"`
}

func (x *UavDeviceListData) Reset() {
	*x = UavDeviceListData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_uav_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UavDeviceListData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UavDeviceListData) ProtoMessage() {}

func (x *UavDeviceListData) ProtoReflect() protoreflect.Message {
	mi := &file_uav_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UavDeviceListData.ProtoReflect.Descriptor instead.
func (*UavDeviceListData) Descriptor() ([]byte, []int) {
	return file_uav_proto_rawDescGZIP(), []int{3}
}

func (x *UavDeviceListData) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UavDeviceListData) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UavDeviceListData) GetIp() string {
	if x != nil {
		return x.Ip
	}
	return ""
}

func (x *UavDeviceListData) GetPort() int64 {
	if x != nil {
		return x.Port
	}
	return 0
}

func (x *UavDeviceListData) GetHangarIp() string {
	if x != nil {
		return x.HangarIp
	}
	return ""
}

func (x *UavDeviceListData) GetHangarPort() int64 {
	if x != nil {
		return x.HangarPort
	}
	return 0
}

// 无人机内部控制指令
type UavControlData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cmd       string  `protobuf:"bytes,1,opt,name=Cmd,proto3" json:"Cmd,omitempty"`
	Data      string  `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
	UavId     int64   `protobuf:"varint,3,opt,name=uav_id,json=uavId,proto3" json:"uav_id,omitempty"`
	FlyId     int64   `protobuf:"varint,4,opt,name=fly_id,json=flyId,proto3" json:"fly_id,omitempty"`
	FlyOp     string  `protobuf:"bytes,5,opt,name=fly_op,json=flyOp,proto3" json:"fly_op,omitempty"`
	HistoryId int64   `protobuf:"varint,6,opt,name=history_id,json=historyId,proto3" json:"history_id,omitempty"`
	Lat       float64 `protobuf:"fixed64,7,opt,name=lat,proto3" json:"lat,omitempty"`
	Lon       float64 `protobuf:"fixed64,8,opt,name=lon,proto3" json:"lon,omitempty"`
	Alt       float64 `protobuf:"fixed64,9,opt,name=alt,proto3" json:"alt,omitempty"`
}

func (x *UavControlData) Reset() {
	*x = UavControlData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_uav_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UavControlData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UavControlData) ProtoMessage() {}

func (x *UavControlData) ProtoReflect() protoreflect.Message {
	mi := &file_uav_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UavControlData.ProtoReflect.Descriptor instead.
func (*UavControlData) Descriptor() ([]byte, []int) {
	return file_uav_proto_rawDescGZIP(), []int{4}
}

func (x *UavControlData) GetCmd() string {
	if x != nil {
		return x.Cmd
	}
	return ""
}

func (x *UavControlData) GetData() string {
	if x != nil {
		return x.Data
	}
	return ""
}

func (x *UavControlData) GetUavId() int64 {
	if x != nil {
		return x.UavId
	}
	return 0
}

func (x *UavControlData) GetFlyId() int64 {
	if x != nil {
		return x.FlyId
	}
	return 0
}

func (x *UavControlData) GetFlyOp() string {
	if x != nil {
		return x.FlyOp
	}
	return ""
}

func (x *UavControlData) GetHistoryId() int64 {
	if x != nil {
		return x.HistoryId
	}
	return 0
}

func (x *UavControlData) GetLat() float64 {
	if x != nil {
		return x.Lat
	}
	return 0
}

func (x *UavControlData) GetLon() float64 {
	if x != nil {
		return x.Lon
	}
	return 0
}

func (x *UavControlData) GetAlt() float64 {
	if x != nil {
		return x.Alt
	}
	return 0
}

type UavDeviceListResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total int64                `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
	Data  []*UavDeviceListData `protobuf:"bytes,2,rep,name=Data,proto3" json:"Data,omitempty"`
}

func (x *UavDeviceListResp) Reset() {
	*x = UavDeviceListResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_uav_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UavDeviceListResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UavDeviceListResp) ProtoMessage() {}

func (x *UavDeviceListResp) ProtoReflect() protoreflect.Message {
	mi := &file_uav_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UavDeviceListResp.ProtoReflect.Descriptor instead.
func (*UavDeviceListResp) Descriptor() ([]byte, []int) {
	return file_uav_proto_rawDescGZIP(), []int{5}
}

func (x *UavDeviceListResp) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *UavDeviceListResp) GetData() []*UavDeviceListData {
	if x != nil {
		return x.Data
	}
	return nil
}

type UavDeviceFindByIdReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UavDeviceId int64  `protobuf:"varint,1,opt,name=UavDeviceId,proto3" json:"UavDeviceId,omitempty"`
	Type        int64  `protobuf:"varint,2,opt,name=Type,proto3" json:"Type,omitempty"`
	StartTime   string `protobuf:"bytes,3,opt,name=StartTime,proto3" json:"StartTime,omitempty"` //开始时间
	EndTime     string `protobuf:"bytes,4,opt,name=EndTime,proto3" json:"EndTime,omitempty"`     //结束时间
}

func (x *UavDeviceFindByIdReq) Reset() {
	*x = UavDeviceFindByIdReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_uav_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UavDeviceFindByIdReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UavDeviceFindByIdReq) ProtoMessage() {}

func (x *UavDeviceFindByIdReq) ProtoReflect() protoreflect.Message {
	mi := &file_uav_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UavDeviceFindByIdReq.ProtoReflect.Descriptor instead.
func (*UavDeviceFindByIdReq) Descriptor() ([]byte, []int) {
	return file_uav_proto_rawDescGZIP(), []int{6}
}

func (x *UavDeviceFindByIdReq) GetUavDeviceId() int64 {
	if x != nil {
		return x.UavDeviceId
	}
	return 0
}

func (x *UavDeviceFindByIdReq) GetType() int64 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *UavDeviceFindByIdReq) GetStartTime() string {
	if x != nil {
		return x.StartTime
	}
	return ""
}

func (x *UavDeviceFindByIdReq) GetEndTime() string {
	if x != nil {
		return x.EndTime
	}
	return ""
}

type UavDeviceFindByIdResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         int64  `protobuf:"varint,1,opt,name=Id,proto3" json:"Id,omitempty"`
	Name       string `protobuf:"bytes,2,opt,name=Name,proto3" json:"Name,omitempty"`
	Ip         string `protobuf:"bytes,3,opt,name=Ip,proto3" json:"Ip,omitempty"`
	Port       string `protobuf:"bytes,4,opt,name=Port,proto3" json:"Port,omitempty"`
	HangarIp   string `protobuf:"bytes,5,opt,name=Hangar_ip,json=HangarIp,proto3" json:"Hangar_ip,omitempty"`
	HangarPort string `protobuf:"bytes,6,opt,name=Hangar_port,json=HangarPort,proto3" json:"Hangar_port,omitempty"`
}

func (x *UavDeviceFindByIdResp) Reset() {
	*x = UavDeviceFindByIdResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_uav_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UavDeviceFindByIdResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UavDeviceFindByIdResp) ProtoMessage() {}

func (x *UavDeviceFindByIdResp) ProtoReflect() protoreflect.Message {
	mi := &file_uav_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UavDeviceFindByIdResp.ProtoReflect.Descriptor instead.
func (*UavDeviceFindByIdResp) Descriptor() ([]byte, []int) {
	return file_uav_proto_rawDescGZIP(), []int{7}
}

func (x *UavDeviceFindByIdResp) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UavDeviceFindByIdResp) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UavDeviceFindByIdResp) GetIp() string {
	if x != nil {
		return x.Ip
	}
	return ""
}

func (x *UavDeviceFindByIdResp) GetPort() string {
	if x != nil {
		return x.Port
	}
	return ""
}

func (x *UavDeviceFindByIdResp) GetHangarIp() string {
	if x != nil {
		return x.HangarIp
	}
	return ""
}

func (x *UavDeviceFindByIdResp) GetHangarPort() string {
	if x != nil {
		return x.HangarPort
	}
	return ""
}

type UavFlyData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cmd       string `protobuf:"bytes,1,opt,name=cmd,proto3" json:"cmd,omitempty"`
	Data      string `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
	Historyid int64  `protobuf:"varint,3,opt,name=historyid,proto3" json:"historyid,omitempty"`
}

func (x *UavFlyData) Reset() {
	*x = UavFlyData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_uav_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UavFlyData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UavFlyData) ProtoMessage() {}

func (x *UavFlyData) ProtoReflect() protoreflect.Message {
	mi := &file_uav_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UavFlyData.ProtoReflect.Descriptor instead.
func (*UavFlyData) Descriptor() ([]byte, []int) {
	return file_uav_proto_rawDescGZIP(), []int{8}
}

func (x *UavFlyData) GetCmd() string {
	if x != nil {
		return x.Cmd
	}
	return ""
}

func (x *UavFlyData) GetData() string {
	if x != nil {
		return x.Data
	}
	return ""
}

func (x *UavFlyData) GetHistoryid() int64 {
	if x != nil {
		return x.Historyid
	}
	return 0
}

type UavAlertData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        int64   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name      string  `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Image     string  `protobuf:"bytes,3,opt,name=image,proto3" json:"image,omitempty"`
	Type      int64   `protobuf:"varint,4,opt,name=type,proto3" json:"type,omitempty"`
	Ccode     string  `protobuf:"bytes,5,opt,name=Ccode,proto3" json:"Ccode,omitempty"`
	Lat       float64 `protobuf:"fixed64,6,opt,name=lat,proto3" json:"lat,omitempty"`
	Lon       float64 `protobuf:"fixed64,7,opt,name=lon,proto3" json:"lon,omitempty"`
	Alt       float64 `protobuf:"fixed64,8,opt,name=alt,proto3" json:"alt,omitempty"`
	StartTime string  `protobuf:"bytes,9,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
	EndTime   string  `protobuf:"bytes,10,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty"`
}

func (x *UavAlertData) Reset() {
	*x = UavAlertData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_uav_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UavAlertData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UavAlertData) ProtoMessage() {}

func (x *UavAlertData) ProtoReflect() protoreflect.Message {
	mi := &file_uav_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UavAlertData.ProtoReflect.Descriptor instead.
func (*UavAlertData) Descriptor() ([]byte, []int) {
	return file_uav_proto_rawDescGZIP(), []int{9}
}

func (x *UavAlertData) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UavAlertData) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UavAlertData) GetImage() string {
	if x != nil {
		return x.Image
	}
	return ""
}

func (x *UavAlertData) GetType() int64 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *UavAlertData) GetCcode() string {
	if x != nil {
		return x.Ccode
	}
	return ""
}

func (x *UavAlertData) GetLat() float64 {
	if x != nil {
		return x.Lat
	}
	return 0
}

func (x *UavAlertData) GetLon() float64 {
	if x != nil {
		return x.Lon
	}
	return 0
}

func (x *UavAlertData) GetAlt() float64 {
	if x != nil {
		return x.Alt
	}
	return 0
}

func (x *UavAlertData) GetStartTime() string {
	if x != nil {
		return x.StartTime
	}
	return ""
}

func (x *UavAlertData) GetEndTime() string {
	if x != nil {
		return x.EndTime
	}
	return ""
}

type UavDeviceFindByIdsReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UavDeviceIds []int64 `protobuf:"varint,1,rep,packed,name=UavDeviceIds,proto3" json:"UavDeviceIds,omitempty"`
}

func (x *UavDeviceFindByIdsReq) Reset() {
	*x = UavDeviceFindByIdsReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_uav_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UavDeviceFindByIdsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UavDeviceFindByIdsReq) ProtoMessage() {}

func (x *UavDeviceFindByIdsReq) ProtoReflect() protoreflect.Message {
	mi := &file_uav_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UavDeviceFindByIdsReq.ProtoReflect.Descriptor instead.
func (*UavDeviceFindByIdsReq) Descriptor() ([]byte, []int) {
	return file_uav_proto_rawDescGZIP(), []int{10}
}

func (x *UavDeviceFindByIdsReq) GetUavDeviceIds() []int64 {
	if x != nil {
		return x.UavDeviceIds
	}
	return nil
}

type UavDeviceFindByIdsResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total int64                `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
	List  []*UavDeviceListData `protobuf:"bytes,2,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *UavDeviceFindByIdsResp) Reset() {
	*x = UavDeviceFindByIdsResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_uav_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UavDeviceFindByIdsResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UavDeviceFindByIdsResp) ProtoMessage() {}

func (x *UavDeviceFindByIdsResp) ProtoReflect() protoreflect.Message {
	mi := &file_uav_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UavDeviceFindByIdsResp.ProtoReflect.Descriptor instead.
func (*UavDeviceFindByIdsResp) Descriptor() ([]byte, []int) {
	return file_uav_proto_rawDescGZIP(), []int{11}
}

func (x *UavDeviceFindByIdsResp) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *UavDeviceFindByIdsResp) GetList() []*UavDeviceListData {
	if x != nil {
		return x.List
	}
	return nil
}

type AddUavFlyReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name    string `protobuf:"bytes,1,opt,name=Name,proto3" json:"Name,omitempty"`
	Data    string `protobuf:"bytes,2,opt,name=Data,proto3" json:"Data,omitempty"`
	Creator string `protobuf:"bytes,4,opt,name=Creator,proto3" json:"Creator,omitempty"`
}

func (x *AddUavFlyReq) Reset() {
	*x = AddUavFlyReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_uav_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddUavFlyReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddUavFlyReq) ProtoMessage() {}

func (x *AddUavFlyReq) ProtoReflect() protoreflect.Message {
	mi := &file_uav_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddUavFlyReq.ProtoReflect.Descriptor instead.
func (*AddUavFlyReq) Descriptor() ([]byte, []int) {
	return file_uav_proto_rawDescGZIP(), []int{12}
}

func (x *AddUavFlyReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *AddUavFlyReq) GetData() string {
	if x != nil {
		return x.Data
	}
	return ""
}

func (x *AddUavFlyReq) GetCreator() string {
	if x != nil {
		return x.Creator
	}
	return ""
}

type AddUavFlyResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    string `protobuf:"bytes,1,opt,name=Code,proto3" json:"Code,omitempty"`
	Message string `protobuf:"bytes,2,opt,name=Message,proto3" json:"Message,omitempty"`
}

func (x *AddUavFlyResp) Reset() {
	*x = AddUavFlyResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_uav_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddUavFlyResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddUavFlyResp) ProtoMessage() {}

func (x *AddUavFlyResp) ProtoReflect() protoreflect.Message {
	mi := &file_uav_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddUavFlyResp.ProtoReflect.Descriptor instead.
func (*AddUavFlyResp) Descriptor() ([]byte, []int) {
	return file_uav_proto_rawDescGZIP(), []int{13}
}

func (x *AddUavFlyResp) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *AddUavFlyResp) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type UavFlyAddResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pong string `protobuf:"bytes,1,opt,name=pong,proto3" json:"pong,omitempty"`
}

func (x *UavFlyAddResp) Reset() {
	*x = UavFlyAddResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_uav_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UavFlyAddResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UavFlyAddResp) ProtoMessage() {}

func (x *UavFlyAddResp) ProtoReflect() protoreflect.Message {
	mi := &file_uav_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UavFlyAddResp.ProtoReflect.Descriptor instead.
func (*UavFlyAddResp) Descriptor() ([]byte, []int) {
	return file_uav_proto_rawDescGZIP(), []int{14}
}

func (x *UavFlyAddResp) GetPong() string {
	if x != nil {
		return x.Pong
	}
	return ""
}

type ListUavFlyReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Current  int64 `protobuf:"varint,1,opt,name=Current,proto3" json:"Current,omitempty"`
	PageSize int64 `protobuf:"varint,2,opt,name=PageSize,proto3" json:"PageSize,omitempty"`
}

func (x *ListUavFlyReq) Reset() {
	*x = ListUavFlyReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_uav_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListUavFlyReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListUavFlyReq) ProtoMessage() {}

func (x *ListUavFlyReq) ProtoReflect() protoreflect.Message {
	mi := &file_uav_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListUavFlyReq.ProtoReflect.Descriptor instead.
func (*ListUavFlyReq) Descriptor() ([]byte, []int) {
	return file_uav_proto_rawDescGZIP(), []int{15}
}

func (x *ListUavFlyReq) GetCurrent() int64 {
	if x != nil {
		return x.Current
	}
	return 0
}

func (x *ListUavFlyReq) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

type ListtUavFlyData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         int64  `protobuf:"varint,1,opt,name=Id,proto3" json:"Id,omitempty"`
	Name       string `protobuf:"bytes,2,opt,name=Name,proto3" json:"Name,omitempty"`
	Data       string `protobuf:"bytes,3,opt,name=Data,proto3" json:"Data,omitempty"`
	CreateTime string `protobuf:"bytes,4,opt,name=CreateTime,proto3" json:"CreateTime,omitempty"`
	Creator    string `protobuf:"bytes,5,opt,name=Creator,proto3" json:"Creator,omitempty"`
}

func (x *ListtUavFlyData) Reset() {
	*x = ListtUavFlyData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_uav_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListtUavFlyData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListtUavFlyData) ProtoMessage() {}

func (x *ListtUavFlyData) ProtoReflect() protoreflect.Message {
	mi := &file_uav_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListtUavFlyData.ProtoReflect.Descriptor instead.
func (*ListtUavFlyData) Descriptor() ([]byte, []int) {
	return file_uav_proto_rawDescGZIP(), []int{16}
}

func (x *ListtUavFlyData) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ListtUavFlyData) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ListtUavFlyData) GetData() string {
	if x != nil {
		return x.Data
	}
	return ""
}

func (x *ListtUavFlyData) GetCreateTime() string {
	if x != nil {
		return x.CreateTime
	}
	return ""
}

func (x *ListtUavFlyData) GetCreator() string {
	if x != nil {
		return x.Creator
	}
	return ""
}

type ListUavFlyResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total int64              `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
	List  []*ListtUavFlyData `protobuf:"bytes,2,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *ListUavFlyResp) Reset() {
	*x = ListUavFlyResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_uav_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListUavFlyResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListUavFlyResp) ProtoMessage() {}

func (x *ListUavFlyResp) ProtoReflect() protoreflect.Message {
	mi := &file_uav_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListUavFlyResp.ProtoReflect.Descriptor instead.
func (*ListUavFlyResp) Descriptor() ([]byte, []int) {
	return file_uav_proto_rawDescGZIP(), []int{17}
}

func (x *ListUavFlyResp) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *ListUavFlyResp) GetList() []*ListtUavFlyData {
	if x != nil {
		return x.List
	}
	return nil
}

type UpdateUavFlyReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name       string `protobuf:"bytes,1,opt,name=Name,proto3" json:"Name,omitempty"`
	Data       string `protobuf:"bytes,2,opt,name=Data,proto3" json:"Data,omitempty"`
	CreateTime string `protobuf:"bytes,3,opt,name=CreateTime,proto3" json:"CreateTime,omitempty"`
	Creator    string `protobuf:"bytes,4,opt,name=Creator,proto3" json:"Creator,omitempty"`
}

func (x *UpdateUavFlyReq) Reset() {
	*x = UpdateUavFlyReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_uav_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateUavFlyReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateUavFlyReq) ProtoMessage() {}

func (x *UpdateUavFlyReq) ProtoReflect() protoreflect.Message {
	mi := &file_uav_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateUavFlyReq.ProtoReflect.Descriptor instead.
func (*UpdateUavFlyReq) Descriptor() ([]byte, []int) {
	return file_uav_proto_rawDescGZIP(), []int{18}
}

func (x *UpdateUavFlyReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UpdateUavFlyReq) GetData() string {
	if x != nil {
		return x.Data
	}
	return ""
}

func (x *UpdateUavFlyReq) GetCreateTime() string {
	if x != nil {
		return x.CreateTime
	}
	return ""
}

func (x *UpdateUavFlyReq) GetCreator() string {
	if x != nil {
		return x.Creator
	}
	return ""
}

type UpdateUavFlyResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    string `protobuf:"bytes,1,opt,name=Code,proto3" json:"Code,omitempty"`
	Message string `protobuf:"bytes,2,opt,name=Message,proto3" json:"Message,omitempty"`
}

func (x *UpdateUavFlyResp) Reset() {
	*x = UpdateUavFlyResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_uav_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateUavFlyResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateUavFlyResp) ProtoMessage() {}

func (x *UpdateUavFlyResp) ProtoReflect() protoreflect.Message {
	mi := &file_uav_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateUavFlyResp.ProtoReflect.Descriptor instead.
func (*UpdateUavFlyResp) Descriptor() ([]byte, []int) {
	return file_uav_proto_rawDescGZIP(), []int{19}
}

func (x *UpdateUavFlyResp) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *UpdateUavFlyResp) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type UavFlyFindByIdReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id   int64  `protobuf:"varint,1,opt,name=Id,proto3" json:"Id,omitempty"`
	Name string `protobuf:"bytes,2,opt,name=Name,proto3" json:"Name,omitempty"`
}

func (x *UavFlyFindByIdReq) Reset() {
	*x = UavFlyFindByIdReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_uav_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UavFlyFindByIdReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UavFlyFindByIdReq) ProtoMessage() {}

func (x *UavFlyFindByIdReq) ProtoReflect() protoreflect.Message {
	mi := &file_uav_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UavFlyFindByIdReq.ProtoReflect.Descriptor instead.
func (*UavFlyFindByIdReq) Descriptor() ([]byte, []int) {
	return file_uav_proto_rawDescGZIP(), []int{20}
}

func (x *UavFlyFindByIdReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UavFlyFindByIdReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type DeleteUavFlyReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ids []int64 `protobuf:"varint,1,rep,packed,name=ids,proto3" json:"ids,omitempty"`
}

func (x *DeleteUavFlyReq) Reset() {
	*x = DeleteUavFlyReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_uav_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteUavFlyReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteUavFlyReq) ProtoMessage() {}

func (x *DeleteUavFlyReq) ProtoReflect() protoreflect.Message {
	mi := &file_uav_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteUavFlyReq.ProtoReflect.Descriptor instead.
func (*DeleteUavFlyReq) Descriptor() ([]byte, []int) {
	return file_uav_proto_rawDescGZIP(), []int{21}
}

func (x *DeleteUavFlyReq) GetIds() []int64 {
	if x != nil {
		return x.Ids
	}
	return nil
}

type DeleteUavFlyResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code string `protobuf:"bytes,1,opt,name=Code,proto3" json:"Code,omitempty"`
}

func (x *DeleteUavFlyResp) Reset() {
	*x = DeleteUavFlyResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_uav_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteUavFlyResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteUavFlyResp) ProtoMessage() {}

func (x *DeleteUavFlyResp) ProtoReflect() protoreflect.Message {
	mi := &file_uav_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteUavFlyResp.ProtoReflect.Descriptor instead.
func (*DeleteUavFlyResp) Descriptor() ([]byte, []int) {
	return file_uav_proto_rawDescGZIP(), []int{22}
}

func (x *DeleteUavFlyResp) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

type AddUavHistoryReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UavId      int64  `protobuf:"varint,1,opt,name=UavId,proto3" json:"UavId,omitempty"`          //无人机id
	FlyID      int64  `protobuf:"varint,2,opt,name=FlyID,proto3" json:"FlyID,omitempty"`          // 巡检路线id
	Operator   string `protobuf:"bytes,3,opt,name=Operator,proto3" json:"Operator,omitempty"`     //操作者
	CreateTime string `protobuf:"bytes,4,opt,name=CreateTime,proto3" json:"CreateTime,omitempty"` //创建时间
	EndTime    string `protobuf:"bytes,5,opt,name=EndTime,proto3" json:"EndTime,omitempty"`       //结束时间
}

func (x *AddUavHistoryReq) Reset() {
	*x = AddUavHistoryReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_uav_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddUavHistoryReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddUavHistoryReq) ProtoMessage() {}

func (x *AddUavHistoryReq) ProtoReflect() protoreflect.Message {
	mi := &file_uav_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddUavHistoryReq.ProtoReflect.Descriptor instead.
func (*AddUavHistoryReq) Descriptor() ([]byte, []int) {
	return file_uav_proto_rawDescGZIP(), []int{23}
}

func (x *AddUavHistoryReq) GetUavId() int64 {
	if x != nil {
		return x.UavId
	}
	return 0
}

func (x *AddUavHistoryReq) GetFlyID() int64 {
	if x != nil {
		return x.FlyID
	}
	return 0
}

func (x *AddUavHistoryReq) GetOperator() string {
	if x != nil {
		return x.Operator
	}
	return ""
}

func (x *AddUavHistoryReq) GetCreateTime() string {
	if x != nil {
		return x.CreateTime
	}
	return ""
}

func (x *AddUavHistoryReq) GetEndTime() string {
	if x != nil {
		return x.EndTime
	}
	return ""
}

type AddUavHistoryResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    string `protobuf:"bytes,1,opt,name=Code,proto3" json:"Code,omitempty"`
	Message string `protobuf:"bytes,2,opt,name=Message,proto3" json:"Message,omitempty"`
}

func (x *AddUavHistoryResp) Reset() {
	*x = AddUavHistoryResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_uav_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddUavHistoryResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddUavHistoryResp) ProtoMessage() {}

func (x *AddUavHistoryResp) ProtoReflect() protoreflect.Message {
	mi := &file_uav_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddUavHistoryResp.ProtoReflect.Descriptor instead.
func (*AddUavHistoryResp) Descriptor() ([]byte, []int) {
	return file_uav_proto_rawDescGZIP(), []int{24}
}

func (x *AddUavHistoryResp) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *AddUavHistoryResp) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type UavHistoryAddResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pong string `protobuf:"bytes,1,opt,name=pong,proto3" json:"pong,omitempty"`
}

func (x *UavHistoryAddResp) Reset() {
	*x = UavHistoryAddResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_uav_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UavHistoryAddResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UavHistoryAddResp) ProtoMessage() {}

func (x *UavHistoryAddResp) ProtoReflect() protoreflect.Message {
	mi := &file_uav_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UavHistoryAddResp.ProtoReflect.Descriptor instead.
func (*UavHistoryAddResp) Descriptor() ([]byte, []int) {
	return file_uav_proto_rawDescGZIP(), []int{25}
}

func (x *UavHistoryAddResp) GetPong() string {
	if x != nil {
		return x.Pong
	}
	return ""
}

type ListUavHistoryReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Current  int64 `protobuf:"varint,1,opt,name=Current,proto3" json:"Current,omitempty"`
	PageSize int64 `protobuf:"varint,2,opt,name=PageSize,proto3" json:"PageSize,omitempty"`
	UavId    int64 `protobuf:"varint,3,opt,name=UavId,proto3" json:"UavId,omitempty"`
}

func (x *ListUavHistoryReq) Reset() {
	*x = ListUavHistoryReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_uav_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListUavHistoryReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListUavHistoryReq) ProtoMessage() {}

func (x *ListUavHistoryReq) ProtoReflect() protoreflect.Message {
	mi := &file_uav_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListUavHistoryReq.ProtoReflect.Descriptor instead.
func (*ListUavHistoryReq) Descriptor() ([]byte, []int) {
	return file_uav_proto_rawDescGZIP(), []int{26}
}

func (x *ListUavHistoryReq) GetCurrent() int64 {
	if x != nil {
		return x.Current
	}
	return 0
}

func (x *ListUavHistoryReq) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *ListUavHistoryReq) GetUavId() int64 {
	if x != nil {
		return x.UavId
	}
	return 0
}

type ListtUavHistoryData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         int64  `protobuf:"varint,1,opt,name=Id,proto3" json:"Id,omitempty"`
	UavId      int64  `protobuf:"varint,2,opt,name=UavId,proto3" json:"UavId,omitempty"`          //无人机id
	FlyID      int64  `protobuf:"varint,3,opt,name=FlyID,proto3" json:"FlyID,omitempty"`          // 巡检路线id
	Operator   string `protobuf:"bytes,4,opt,name=Operator,proto3" json:"Operator,omitempty"`     //操作者
	CreateTime string `protobuf:"bytes,5,opt,name=CreateTime,proto3" json:"CreateTime,omitempty"` //创建时间
	EndTime    string `protobuf:"bytes,6,opt,name=EndTime,proto3" json:"EndTime,omitempty"`       //结束时间
}

func (x *ListtUavHistoryData) Reset() {
	*x = ListtUavHistoryData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_uav_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListtUavHistoryData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListtUavHistoryData) ProtoMessage() {}

func (x *ListtUavHistoryData) ProtoReflect() protoreflect.Message {
	mi := &file_uav_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListtUavHistoryData.ProtoReflect.Descriptor instead.
func (*ListtUavHistoryData) Descriptor() ([]byte, []int) {
	return file_uav_proto_rawDescGZIP(), []int{27}
}

func (x *ListtUavHistoryData) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ListtUavHistoryData) GetUavId() int64 {
	if x != nil {
		return x.UavId
	}
	return 0
}

func (x *ListtUavHistoryData) GetFlyID() int64 {
	if x != nil {
		return x.FlyID
	}
	return 0
}

func (x *ListtUavHistoryData) GetOperator() string {
	if x != nil {
		return x.Operator
	}
	return ""
}

func (x *ListtUavHistoryData) GetCreateTime() string {
	if x != nil {
		return x.CreateTime
	}
	return ""
}

func (x *ListtUavHistoryData) GetEndTime() string {
	if x != nil {
		return x.EndTime
	}
	return ""
}

type ListUavHistoryResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total int64                  `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
	List  []*ListtUavHistoryData `protobuf:"bytes,2,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *ListUavHistoryResp) Reset() {
	*x = ListUavHistoryResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_uav_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListUavHistoryResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListUavHistoryResp) ProtoMessage() {}

func (x *ListUavHistoryResp) ProtoReflect() protoreflect.Message {
	mi := &file_uav_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListUavHistoryResp.ProtoReflect.Descriptor instead.
func (*ListUavHistoryResp) Descriptor() ([]byte, []int) {
	return file_uav_proto_rawDescGZIP(), []int{28}
}

func (x *ListUavHistoryResp) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *ListUavHistoryResp) GetList() []*ListtUavHistoryData {
	if x != nil {
		return x.List
	}
	return nil
}

type UpdateUavHistoryReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         int64  `protobuf:"varint,1,opt,name=Id,proto3" json:"Id,omitempty"`
	UavId      int64  `protobuf:"varint,2,opt,name=UavId,proto3" json:"UavId,omitempty"`          //无人机id
	FlyID      int64  `protobuf:"varint,3,opt,name=FlyID,proto3" json:"FlyID,omitempty"`          // 巡检路线id
	Operator   string `protobuf:"bytes,4,opt,name=Operator,proto3" json:"Operator,omitempty"`     //操作者
	CreateTime string `protobuf:"bytes,5,opt,name=CreateTime,proto3" json:"CreateTime,omitempty"` //创建时间
	EndTime    string `protobuf:"bytes,6,opt,name=EndTime,proto3" json:"EndTime,omitempty"`       //结束时间
}

func (x *UpdateUavHistoryReq) Reset() {
	*x = UpdateUavHistoryReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_uav_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateUavHistoryReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateUavHistoryReq) ProtoMessage() {}

func (x *UpdateUavHistoryReq) ProtoReflect() protoreflect.Message {
	mi := &file_uav_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateUavHistoryReq.ProtoReflect.Descriptor instead.
func (*UpdateUavHistoryReq) Descriptor() ([]byte, []int) {
	return file_uav_proto_rawDescGZIP(), []int{29}
}

func (x *UpdateUavHistoryReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UpdateUavHistoryReq) GetUavId() int64 {
	if x != nil {
		return x.UavId
	}
	return 0
}

func (x *UpdateUavHistoryReq) GetFlyID() int64 {
	if x != nil {
		return x.FlyID
	}
	return 0
}

func (x *UpdateUavHistoryReq) GetOperator() string {
	if x != nil {
		return x.Operator
	}
	return ""
}

func (x *UpdateUavHistoryReq) GetCreateTime() string {
	if x != nil {
		return x.CreateTime
	}
	return ""
}

func (x *UpdateUavHistoryReq) GetEndTime() string {
	if x != nil {
		return x.EndTime
	}
	return ""
}

type UpdateUavHistoryResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    string `protobuf:"bytes,1,opt,name=Code,proto3" json:"Code,omitempty"`
	Message string `protobuf:"bytes,2,opt,name=Message,proto3" json:"Message,omitempty"`
}

func (x *UpdateUavHistoryResp) Reset() {
	*x = UpdateUavHistoryResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_uav_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateUavHistoryResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateUavHistoryResp) ProtoMessage() {}

func (x *UpdateUavHistoryResp) ProtoReflect() protoreflect.Message {
	mi := &file_uav_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateUavHistoryResp.ProtoReflect.Descriptor instead.
func (*UpdateUavHistoryResp) Descriptor() ([]byte, []int) {
	return file_uav_proto_rawDescGZIP(), []int{30}
}

func (x *UpdateUavHistoryResp) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *UpdateUavHistoryResp) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type UavHistoryFindByIdReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id   int64  `protobuf:"varint,1,opt,name=Id,proto3" json:"Id,omitempty"`
	Name string `protobuf:"bytes,2,opt,name=Name,proto3" json:"Name,omitempty"`
}

func (x *UavHistoryFindByIdReq) Reset() {
	*x = UavHistoryFindByIdReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_uav_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UavHistoryFindByIdReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UavHistoryFindByIdReq) ProtoMessage() {}

func (x *UavHistoryFindByIdReq) ProtoReflect() protoreflect.Message {
	mi := &file_uav_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UavHistoryFindByIdReq.ProtoReflect.Descriptor instead.
func (*UavHistoryFindByIdReq) Descriptor() ([]byte, []int) {
	return file_uav_proto_rawDescGZIP(), []int{31}
}

func (x *UavHistoryFindByIdReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UavHistoryFindByIdReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type DeleteUavHistoryReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ids []int64 `protobuf:"varint,1,rep,packed,name=ids,proto3" json:"ids,omitempty"`
}

func (x *DeleteUavHistoryReq) Reset() {
	*x = DeleteUavHistoryReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_uav_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteUavHistoryReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteUavHistoryReq) ProtoMessage() {}

func (x *DeleteUavHistoryReq) ProtoReflect() protoreflect.Message {
	mi := &file_uav_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteUavHistoryReq.ProtoReflect.Descriptor instead.
func (*DeleteUavHistoryReq) Descriptor() ([]byte, []int) {
	return file_uav_proto_rawDescGZIP(), []int{32}
}

func (x *DeleteUavHistoryReq) GetIds() []int64 {
	if x != nil {
		return x.Ids
	}
	return nil
}

type DeleteUavHistoryResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code string `protobuf:"bytes,1,opt,name=Code,proto3" json:"Code,omitempty"`
}

func (x *DeleteUavHistoryResp) Reset() {
	*x = DeleteUavHistoryResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_uav_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteUavHistoryResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteUavHistoryResp) ProtoMessage() {}

func (x *DeleteUavHistoryResp) ProtoReflect() protoreflect.Message {
	mi := &file_uav_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteUavHistoryResp.ProtoReflect.Descriptor instead.
func (*DeleteUavHistoryResp) Descriptor() ([]byte, []int) {
	return file_uav_proto_rawDescGZIP(), []int{33}
}

func (x *DeleteUavHistoryResp) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

type AddUavNetworkReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=Name,proto3" json:"Name,omitempty"`  //无人机id
	Band int64  `protobuf:"varint,2,opt,name=Band,proto3" json:"Band,omitempty"` // 网络频段
	Type int64  `protobuf:"varint,3,opt,name=Type,proto3" json:"Type,omitempty"` //类型，应急
}

func (x *AddUavNetworkReq) Reset() {
	*x = AddUavNetworkReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_uav_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddUavNetworkReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddUavNetworkReq) ProtoMessage() {}

func (x *AddUavNetworkReq) ProtoReflect() protoreflect.Message {
	mi := &file_uav_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddUavNetworkReq.ProtoReflect.Descriptor instead.
func (*AddUavNetworkReq) Descriptor() ([]byte, []int) {
	return file_uav_proto_rawDescGZIP(), []int{34}
}

func (x *AddUavNetworkReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *AddUavNetworkReq) GetBand() int64 {
	if x != nil {
		return x.Band
	}
	return 0
}

func (x *AddUavNetworkReq) GetType() int64 {
	if x != nil {
		return x.Type
	}
	return 0
}

type AddUavNetworkResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    string `protobuf:"bytes,1,opt,name=Code,proto3" json:"Code,omitempty"`
	Message string `protobuf:"bytes,2,opt,name=Message,proto3" json:"Message,omitempty"`
}

func (x *AddUavNetworkResp) Reset() {
	*x = AddUavNetworkResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_uav_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddUavNetworkResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddUavNetworkResp) ProtoMessage() {}

func (x *AddUavNetworkResp) ProtoReflect() protoreflect.Message {
	mi := &file_uav_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddUavNetworkResp.ProtoReflect.Descriptor instead.
func (*AddUavNetworkResp) Descriptor() ([]byte, []int) {
	return file_uav_proto_rawDescGZIP(), []int{35}
}

func (x *AddUavNetworkResp) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *AddUavNetworkResp) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type UavNetworkAddResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pong string `protobuf:"bytes,1,opt,name=pong,proto3" json:"pong,omitempty"`
}

func (x *UavNetworkAddResp) Reset() {
	*x = UavNetworkAddResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_uav_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UavNetworkAddResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UavNetworkAddResp) ProtoMessage() {}

func (x *UavNetworkAddResp) ProtoReflect() protoreflect.Message {
	mi := &file_uav_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UavNetworkAddResp.ProtoReflect.Descriptor instead.
func (*UavNetworkAddResp) Descriptor() ([]byte, []int) {
	return file_uav_proto_rawDescGZIP(), []int{36}
}

func (x *UavNetworkAddResp) GetPong() string {
	if x != nil {
		return x.Pong
	}
	return ""
}

type ListUavNetworkReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Current  int64 `protobuf:"varint,1,opt,name=Current,proto3" json:"Current,omitempty"`
	PageSize int64 `protobuf:"varint,2,opt,name=PageSize,proto3" json:"PageSize,omitempty"`
	UavId    int64 `protobuf:"varint,3,opt,name=UavId,proto3" json:"UavId,omitempty"`
}

func (x *ListUavNetworkReq) Reset() {
	*x = ListUavNetworkReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_uav_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListUavNetworkReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListUavNetworkReq) ProtoMessage() {}

func (x *ListUavNetworkReq) ProtoReflect() protoreflect.Message {
	mi := &file_uav_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListUavNetworkReq.ProtoReflect.Descriptor instead.
func (*ListUavNetworkReq) Descriptor() ([]byte, []int) {
	return file_uav_proto_rawDescGZIP(), []int{37}
}

func (x *ListUavNetworkReq) GetCurrent() int64 {
	if x != nil {
		return x.Current
	}
	return 0
}

func (x *ListUavNetworkReq) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *ListUavNetworkReq) GetUavId() int64 {
	if x != nil {
		return x.UavId
	}
	return 0
}

type ListtUavNetworkData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id   int64  `protobuf:"varint,1,opt,name=Id,proto3" json:"Id,omitempty"`
	Name string `protobuf:"bytes,2,opt,name=Name,proto3" json:"Name,omitempty"`  //无人机id
	Band int64  `protobuf:"varint,3,opt,name=Band,proto3" json:"Band,omitempty"` // 网络频段
	Type int64  `protobuf:"varint,4,opt,name=Type,proto3" json:"Type,omitempty"` //类型，应急
}

func (x *ListtUavNetworkData) Reset() {
	*x = ListtUavNetworkData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_uav_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListtUavNetworkData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListtUavNetworkData) ProtoMessage() {}

func (x *ListtUavNetworkData) ProtoReflect() protoreflect.Message {
	mi := &file_uav_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListtUavNetworkData.ProtoReflect.Descriptor instead.
func (*ListtUavNetworkData) Descriptor() ([]byte, []int) {
	return file_uav_proto_rawDescGZIP(), []int{38}
}

func (x *ListtUavNetworkData) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ListtUavNetworkData) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ListtUavNetworkData) GetBand() int64 {
	if x != nil {
		return x.Band
	}
	return 0
}

func (x *ListtUavNetworkData) GetType() int64 {
	if x != nil {
		return x.Type
	}
	return 0
}

type ListUavNetworkResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total int64                  `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
	List  []*ListtUavNetworkData `protobuf:"bytes,2,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *ListUavNetworkResp) Reset() {
	*x = ListUavNetworkResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_uav_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListUavNetworkResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListUavNetworkResp) ProtoMessage() {}

func (x *ListUavNetworkResp) ProtoReflect() protoreflect.Message {
	mi := &file_uav_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListUavNetworkResp.ProtoReflect.Descriptor instead.
func (*ListUavNetworkResp) Descriptor() ([]byte, []int) {
	return file_uav_proto_rawDescGZIP(), []int{39}
}

func (x *ListUavNetworkResp) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *ListUavNetworkResp) GetList() []*ListtUavNetworkData {
	if x != nil {
		return x.List
	}
	return nil
}

type UpdateUavNetworkReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id   int64  `protobuf:"varint,1,opt,name=Id,proto3" json:"Id,omitempty"`
	Name string `protobuf:"bytes,2,opt,name=Name,proto3" json:"Name,omitempty"`  //无人机id
	Band int64  `protobuf:"varint,3,opt,name=Band,proto3" json:"Band,omitempty"` // 网络频段
	Type int64  `protobuf:"varint,4,opt,name=Type,proto3" json:"Type,omitempty"` //类型，应急
}

func (x *UpdateUavNetworkReq) Reset() {
	*x = UpdateUavNetworkReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_uav_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateUavNetworkReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateUavNetworkReq) ProtoMessage() {}

func (x *UpdateUavNetworkReq) ProtoReflect() protoreflect.Message {
	mi := &file_uav_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateUavNetworkReq.ProtoReflect.Descriptor instead.
func (*UpdateUavNetworkReq) Descriptor() ([]byte, []int) {
	return file_uav_proto_rawDescGZIP(), []int{40}
}

func (x *UpdateUavNetworkReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UpdateUavNetworkReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UpdateUavNetworkReq) GetBand() int64 {
	if x != nil {
		return x.Band
	}
	return 0
}

func (x *UpdateUavNetworkReq) GetType() int64 {
	if x != nil {
		return x.Type
	}
	return 0
}

type UpdateUavNetworkResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    string `protobuf:"bytes,1,opt,name=Code,proto3" json:"Code,omitempty"`
	Message string `protobuf:"bytes,2,opt,name=Message,proto3" json:"Message,omitempty"`
}

func (x *UpdateUavNetworkResp) Reset() {
	*x = UpdateUavNetworkResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_uav_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateUavNetworkResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateUavNetworkResp) ProtoMessage() {}

func (x *UpdateUavNetworkResp) ProtoReflect() protoreflect.Message {
	mi := &file_uav_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateUavNetworkResp.ProtoReflect.Descriptor instead.
func (*UpdateUavNetworkResp) Descriptor() ([]byte, []int) {
	return file_uav_proto_rawDescGZIP(), []int{41}
}

func (x *UpdateUavNetworkResp) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *UpdateUavNetworkResp) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type UavNetworkFindByIdReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id   int64  `protobuf:"varint,1,opt,name=Id,proto3" json:"Id,omitempty"`
	Name string `protobuf:"bytes,2,opt,name=Name,proto3" json:"Name,omitempty"`
}

func (x *UavNetworkFindByIdReq) Reset() {
	*x = UavNetworkFindByIdReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_uav_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UavNetworkFindByIdReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UavNetworkFindByIdReq) ProtoMessage() {}

func (x *UavNetworkFindByIdReq) ProtoReflect() protoreflect.Message {
	mi := &file_uav_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UavNetworkFindByIdReq.ProtoReflect.Descriptor instead.
func (*UavNetworkFindByIdReq) Descriptor() ([]byte, []int) {
	return file_uav_proto_rawDescGZIP(), []int{42}
}

func (x *UavNetworkFindByIdReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UavNetworkFindByIdReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type DeleteUavNetworkReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ids []int64 `protobuf:"varint,1,rep,packed,name=ids,proto3" json:"ids,omitempty"`
}

func (x *DeleteUavNetworkReq) Reset() {
	*x = DeleteUavNetworkReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_uav_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteUavNetworkReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteUavNetworkReq) ProtoMessage() {}

func (x *DeleteUavNetworkReq) ProtoReflect() protoreflect.Message {
	mi := &file_uav_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteUavNetworkReq.ProtoReflect.Descriptor instead.
func (*DeleteUavNetworkReq) Descriptor() ([]byte, []int) {
	return file_uav_proto_rawDescGZIP(), []int{43}
}

func (x *DeleteUavNetworkReq) GetIds() []int64 {
	if x != nil {
		return x.Ids
	}
	return nil
}

type DeleteUavNetworkResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code string `protobuf:"bytes,1,opt,name=Code,proto3" json:"Code,omitempty"`
}

func (x *DeleteUavNetworkResp) Reset() {
	*x = DeleteUavNetworkResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_uav_proto_msgTypes[44]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteUavNetworkResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteUavNetworkResp) ProtoMessage() {}

func (x *DeleteUavNetworkResp) ProtoReflect() protoreflect.Message {
	mi := &file_uav_proto_msgTypes[44]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteUavNetworkResp.ProtoReflect.Descriptor instead.
func (*DeleteUavNetworkResp) Descriptor() ([]byte, []int) {
	return file_uav_proto_rawDescGZIP(), []int{44}
}

func (x *DeleteUavNetworkResp) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

type AddUavPeopleReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Level      int64  `protobuf:"varint,1,opt,name=Level,proto3" json:"Level,omitempty"`          // 人员等级
	Username   string `protobuf:"bytes,2,opt,name=Username,proto3" json:"Username,omitempty"`     // 用户名
	Phone      string `protobuf:"bytes,3,opt,name=Phone,proto3" json:"Phone,omitempty"`           //手机号码
	Status     int64  `protobuf:"varint,4,opt,name=Status,proto3" json:"Status,omitempty"`        //帐号启用状态:0->禁用；1->启用
	Icon       string `protobuf:"bytes,5,opt,name=Icon,proto3" json:"Icon,omitempty"`             //头像
	Gender     int64  `protobuf:"varint,6,opt,name=Gender,proto3" json:"Gender,omitempty"`        //性别：0->未知；1->男；2->女
	CreateTime string `protobuf:"bytes,7,opt,name=CreateTime,proto3" json:"CreateTime,omitempty"` //注册时间
}

func (x *AddUavPeopleReq) Reset() {
	*x = AddUavPeopleReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_uav_proto_msgTypes[45]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddUavPeopleReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddUavPeopleReq) ProtoMessage() {}

func (x *AddUavPeopleReq) ProtoReflect() protoreflect.Message {
	mi := &file_uav_proto_msgTypes[45]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddUavPeopleReq.ProtoReflect.Descriptor instead.
func (*AddUavPeopleReq) Descriptor() ([]byte, []int) {
	return file_uav_proto_rawDescGZIP(), []int{45}
}

func (x *AddUavPeopleReq) GetLevel() int64 {
	if x != nil {
		return x.Level
	}
	return 0
}

func (x *AddUavPeopleReq) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *AddUavPeopleReq) GetPhone() string {
	if x != nil {
		return x.Phone
	}
	return ""
}

func (x *AddUavPeopleReq) GetStatus() int64 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *AddUavPeopleReq) GetIcon() string {
	if x != nil {
		return x.Icon
	}
	return ""
}

func (x *AddUavPeopleReq) GetGender() int64 {
	if x != nil {
		return x.Gender
	}
	return 0
}

func (x *AddUavPeopleReq) GetCreateTime() string {
	if x != nil {
		return x.CreateTime
	}
	return ""
}

type AddUavPeopleResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    string `protobuf:"bytes,1,opt,name=Code,proto3" json:"Code,omitempty"`
	Message string `protobuf:"bytes,2,opt,name=Message,proto3" json:"Message,omitempty"`
}

func (x *AddUavPeopleResp) Reset() {
	*x = AddUavPeopleResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_uav_proto_msgTypes[46]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddUavPeopleResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddUavPeopleResp) ProtoMessage() {}

func (x *AddUavPeopleResp) ProtoReflect() protoreflect.Message {
	mi := &file_uav_proto_msgTypes[46]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddUavPeopleResp.ProtoReflect.Descriptor instead.
func (*AddUavPeopleResp) Descriptor() ([]byte, []int) {
	return file_uav_proto_rawDescGZIP(), []int{46}
}

func (x *AddUavPeopleResp) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *AddUavPeopleResp) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type UavPeopleAddResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pong string `protobuf:"bytes,1,opt,name=pong,proto3" json:"pong,omitempty"`
}

func (x *UavPeopleAddResp) Reset() {
	*x = UavPeopleAddResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_uav_proto_msgTypes[47]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UavPeopleAddResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UavPeopleAddResp) ProtoMessage() {}

func (x *UavPeopleAddResp) ProtoReflect() protoreflect.Message {
	mi := &file_uav_proto_msgTypes[47]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UavPeopleAddResp.ProtoReflect.Descriptor instead.
func (*UavPeopleAddResp) Descriptor() ([]byte, []int) {
	return file_uav_proto_rawDescGZIP(), []int{47}
}

func (x *UavPeopleAddResp) GetPong() string {
	if x != nil {
		return x.Pong
	}
	return ""
}

type ListUavPeopleReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Current  int64 `protobuf:"varint,1,opt,name=Current,proto3" json:"Current,omitempty"`
	PageSize int64 `protobuf:"varint,2,opt,name=PageSize,proto3" json:"PageSize,omitempty"`
	UavId    int64 `protobuf:"varint,3,opt,name=UavId,proto3" json:"UavId,omitempty"`
}

func (x *ListUavPeopleReq) Reset() {
	*x = ListUavPeopleReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_uav_proto_msgTypes[48]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListUavPeopleReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListUavPeopleReq) ProtoMessage() {}

func (x *ListUavPeopleReq) ProtoReflect() protoreflect.Message {
	mi := &file_uav_proto_msgTypes[48]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListUavPeopleReq.ProtoReflect.Descriptor instead.
func (*ListUavPeopleReq) Descriptor() ([]byte, []int) {
	return file_uav_proto_rawDescGZIP(), []int{48}
}

func (x *ListUavPeopleReq) GetCurrent() int64 {
	if x != nil {
		return x.Current
	}
	return 0
}

func (x *ListUavPeopleReq) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *ListUavPeopleReq) GetUavId() int64 {
	if x != nil {
		return x.UavId
	}
	return 0
}

type ListtUavPeopleData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         int64  `protobuf:"varint,1,opt,name=Id,proto3" json:"Id,omitempty"`
	Level      int64  `protobuf:"varint,2,opt,name=Level,proto3" json:"Level,omitempty"`          // 人员等级
	Username   string `protobuf:"bytes,3,opt,name=Username,proto3" json:"Username,omitempty"`     // 用户名
	Phone      string `protobuf:"bytes,4,opt,name=Phone,proto3" json:"Phone,omitempty"`           //手机号码
	Status     int64  `protobuf:"varint,5,opt,name=Status,proto3" json:"Status,omitempty"`        //帐号启用状态:0->禁用；1->启用
	Icon       string `protobuf:"bytes,6,opt,name=Icon,proto3" json:"Icon,omitempty"`             //头像
	Gender     int64  `protobuf:"varint,7,opt,name=Gender,proto3" json:"Gender,omitempty"`        //性别：0->未知；1->男；2->女
	CreateTime string `protobuf:"bytes,8,opt,name=CreateTime,proto3" json:"CreateTime,omitempty"` //注册时间
}

func (x *ListtUavPeopleData) Reset() {
	*x = ListtUavPeopleData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_uav_proto_msgTypes[49]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListtUavPeopleData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListtUavPeopleData) ProtoMessage() {}

func (x *ListtUavPeopleData) ProtoReflect() protoreflect.Message {
	mi := &file_uav_proto_msgTypes[49]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListtUavPeopleData.ProtoReflect.Descriptor instead.
func (*ListtUavPeopleData) Descriptor() ([]byte, []int) {
	return file_uav_proto_rawDescGZIP(), []int{49}
}

func (x *ListtUavPeopleData) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ListtUavPeopleData) GetLevel() int64 {
	if x != nil {
		return x.Level
	}
	return 0
}

func (x *ListtUavPeopleData) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *ListtUavPeopleData) GetPhone() string {
	if x != nil {
		return x.Phone
	}
	return ""
}

func (x *ListtUavPeopleData) GetStatus() int64 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *ListtUavPeopleData) GetIcon() string {
	if x != nil {
		return x.Icon
	}
	return ""
}

func (x *ListtUavPeopleData) GetGender() int64 {
	if x != nil {
		return x.Gender
	}
	return 0
}

func (x *ListtUavPeopleData) GetCreateTime() string {
	if x != nil {
		return x.CreateTime
	}
	return ""
}

type ListUavPeopleResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total int64                 `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
	List  []*ListtUavPeopleData `protobuf:"bytes,2,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *ListUavPeopleResp) Reset() {
	*x = ListUavPeopleResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_uav_proto_msgTypes[50]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListUavPeopleResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListUavPeopleResp) ProtoMessage() {}

func (x *ListUavPeopleResp) ProtoReflect() protoreflect.Message {
	mi := &file_uav_proto_msgTypes[50]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListUavPeopleResp.ProtoReflect.Descriptor instead.
func (*ListUavPeopleResp) Descriptor() ([]byte, []int) {
	return file_uav_proto_rawDescGZIP(), []int{50}
}

func (x *ListUavPeopleResp) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *ListUavPeopleResp) GetList() []*ListtUavPeopleData {
	if x != nil {
		return x.List
	}
	return nil
}

type UpdateUavPeopleReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         int64  `protobuf:"varint,1,opt,name=Id,proto3" json:"Id,omitempty"`
	Level      int64  `protobuf:"varint,2,opt,name=Level,proto3" json:"Level,omitempty"`          // 人员等级
	Username   string `protobuf:"bytes,3,opt,name=Username,proto3" json:"Username,omitempty"`     // 用户名
	Phone      string `protobuf:"bytes,4,opt,name=Phone,proto3" json:"Phone,omitempty"`           //手机号码
	Status     int64  `protobuf:"varint,5,opt,name=Status,proto3" json:"Status,omitempty"`        //帐号启用状态:0->禁用；1->启用
	Icon       string `protobuf:"bytes,6,opt,name=Icon,proto3" json:"Icon,omitempty"`             //头像
	Gender     int64  `protobuf:"varint,7,opt,name=Gender,proto3" json:"Gender,omitempty"`        //性别：0->未知；1->男；2->女
	CreateTime string `protobuf:"bytes,8,opt,name=CreateTime,proto3" json:"CreateTime,omitempty"` //注册时间
}

func (x *UpdateUavPeopleReq) Reset() {
	*x = UpdateUavPeopleReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_uav_proto_msgTypes[51]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateUavPeopleReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateUavPeopleReq) ProtoMessage() {}

func (x *UpdateUavPeopleReq) ProtoReflect() protoreflect.Message {
	mi := &file_uav_proto_msgTypes[51]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateUavPeopleReq.ProtoReflect.Descriptor instead.
func (*UpdateUavPeopleReq) Descriptor() ([]byte, []int) {
	return file_uav_proto_rawDescGZIP(), []int{51}
}

func (x *UpdateUavPeopleReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UpdateUavPeopleReq) GetLevel() int64 {
	if x != nil {
		return x.Level
	}
	return 0
}

func (x *UpdateUavPeopleReq) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *UpdateUavPeopleReq) GetPhone() string {
	if x != nil {
		return x.Phone
	}
	return ""
}

func (x *UpdateUavPeopleReq) GetStatus() int64 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *UpdateUavPeopleReq) GetIcon() string {
	if x != nil {
		return x.Icon
	}
	return ""
}

func (x *UpdateUavPeopleReq) GetGender() int64 {
	if x != nil {
		return x.Gender
	}
	return 0
}

func (x *UpdateUavPeopleReq) GetCreateTime() string {
	if x != nil {
		return x.CreateTime
	}
	return ""
}

type UpdateUavPeopleResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    string `protobuf:"bytes,1,opt,name=Code,proto3" json:"Code,omitempty"`
	Message string `protobuf:"bytes,2,opt,name=Message,proto3" json:"Message,omitempty"`
}

func (x *UpdateUavPeopleResp) Reset() {
	*x = UpdateUavPeopleResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_uav_proto_msgTypes[52]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateUavPeopleResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateUavPeopleResp) ProtoMessage() {}

func (x *UpdateUavPeopleResp) ProtoReflect() protoreflect.Message {
	mi := &file_uav_proto_msgTypes[52]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateUavPeopleResp.ProtoReflect.Descriptor instead.
func (*UpdateUavPeopleResp) Descriptor() ([]byte, []int) {
	return file_uav_proto_rawDescGZIP(), []int{52}
}

func (x *UpdateUavPeopleResp) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *UpdateUavPeopleResp) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type UavPeopleFindByIdReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id   int64  `protobuf:"varint,1,opt,name=Id,proto3" json:"Id,omitempty"`
	Name string `protobuf:"bytes,2,opt,name=Name,proto3" json:"Name,omitempty"`
}

func (x *UavPeopleFindByIdReq) Reset() {
	*x = UavPeopleFindByIdReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_uav_proto_msgTypes[53]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UavPeopleFindByIdReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UavPeopleFindByIdReq) ProtoMessage() {}

func (x *UavPeopleFindByIdReq) ProtoReflect() protoreflect.Message {
	mi := &file_uav_proto_msgTypes[53]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UavPeopleFindByIdReq.ProtoReflect.Descriptor instead.
func (*UavPeopleFindByIdReq) Descriptor() ([]byte, []int) {
	return file_uav_proto_rawDescGZIP(), []int{53}
}

func (x *UavPeopleFindByIdReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UavPeopleFindByIdReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type DeleteUavPeopleReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ids []int64 `protobuf:"varint,1,rep,packed,name=ids,proto3" json:"ids,omitempty"`
}

func (x *DeleteUavPeopleReq) Reset() {
	*x = DeleteUavPeopleReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_uav_proto_msgTypes[54]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteUavPeopleReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteUavPeopleReq) ProtoMessage() {}

func (x *DeleteUavPeopleReq) ProtoReflect() protoreflect.Message {
	mi := &file_uav_proto_msgTypes[54]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteUavPeopleReq.ProtoReflect.Descriptor instead.
func (*DeleteUavPeopleReq) Descriptor() ([]byte, []int) {
	return file_uav_proto_rawDescGZIP(), []int{54}
}

func (x *DeleteUavPeopleReq) GetIds() []int64 {
	if x != nil {
		return x.Ids
	}
	return nil
}

type DeleteUavPeopleResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code string `protobuf:"bytes,1,opt,name=Code,proto3" json:"Code,omitempty"`
}

func (x *DeleteUavPeopleResp) Reset() {
	*x = DeleteUavPeopleResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_uav_proto_msgTypes[55]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteUavPeopleResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteUavPeopleResp) ProtoMessage() {}

func (x *DeleteUavPeopleResp) ProtoReflect() protoreflect.Message {
	mi := &file_uav_proto_msgTypes[55]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteUavPeopleResp.ProtoReflect.Descriptor instead.
func (*DeleteUavPeopleResp) Descriptor() ([]byte, []int) {
	return file_uav_proto_rawDescGZIP(), []int{55}
}

func (x *DeleteUavPeopleResp) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

type AddUavPlanReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UavId      int64  `protobuf:"varint,1,opt,name=Uav_id,json=UavId,proto3" json:"Uav_id,omitempty"` // 无人机ID
	Plan       string `protobuf:"bytes,2,opt,name=Plan,proto3" json:"Plan,omitempty"`                 //寻飞计划
	FlyId      int64  `protobuf:"varint,3,opt,name=Fly_id,json=FlyId,proto3" json:"Fly_id,omitempty"` //航线ID
	CreateTime string `protobuf:"bytes,4,opt,name=CreateTime,proto3" json:"CreateTime,omitempty"`     //注册时间
}

func (x *AddUavPlanReq) Reset() {
	*x = AddUavPlanReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_uav_proto_msgTypes[56]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddUavPlanReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddUavPlanReq) ProtoMessage() {}

func (x *AddUavPlanReq) ProtoReflect() protoreflect.Message {
	mi := &file_uav_proto_msgTypes[56]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddUavPlanReq.ProtoReflect.Descriptor instead.
func (*AddUavPlanReq) Descriptor() ([]byte, []int) {
	return file_uav_proto_rawDescGZIP(), []int{56}
}

func (x *AddUavPlanReq) GetUavId() int64 {
	if x != nil {
		return x.UavId
	}
	return 0
}

func (x *AddUavPlanReq) GetPlan() string {
	if x != nil {
		return x.Plan
	}
	return ""
}

func (x *AddUavPlanReq) GetFlyId() int64 {
	if x != nil {
		return x.FlyId
	}
	return 0
}

func (x *AddUavPlanReq) GetCreateTime() string {
	if x != nil {
		return x.CreateTime
	}
	return ""
}

type AddUavPlanResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    string `protobuf:"bytes,1,opt,name=Code,proto3" json:"Code,omitempty"`
	Message string `protobuf:"bytes,2,opt,name=Message,proto3" json:"Message,omitempty"`
}

func (x *AddUavPlanResp) Reset() {
	*x = AddUavPlanResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_uav_proto_msgTypes[57]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddUavPlanResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddUavPlanResp) ProtoMessage() {}

func (x *AddUavPlanResp) ProtoReflect() protoreflect.Message {
	mi := &file_uav_proto_msgTypes[57]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddUavPlanResp.ProtoReflect.Descriptor instead.
func (*AddUavPlanResp) Descriptor() ([]byte, []int) {
	return file_uav_proto_rawDescGZIP(), []int{57}
}

func (x *AddUavPlanResp) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *AddUavPlanResp) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type UavPlanAddResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pong string `protobuf:"bytes,1,opt,name=pong,proto3" json:"pong,omitempty"`
}

func (x *UavPlanAddResp) Reset() {
	*x = UavPlanAddResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_uav_proto_msgTypes[58]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UavPlanAddResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UavPlanAddResp) ProtoMessage() {}

func (x *UavPlanAddResp) ProtoReflect() protoreflect.Message {
	mi := &file_uav_proto_msgTypes[58]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UavPlanAddResp.ProtoReflect.Descriptor instead.
func (*UavPlanAddResp) Descriptor() ([]byte, []int) {
	return file_uav_proto_rawDescGZIP(), []int{58}
}

func (x *UavPlanAddResp) GetPong() string {
	if x != nil {
		return x.Pong
	}
	return ""
}

type ListUavPlanReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Current  int64 `protobuf:"varint,1,opt,name=Current,proto3" json:"Current,omitempty"`
	PageSize int64 `protobuf:"varint,2,opt,name=PageSize,proto3" json:"PageSize,omitempty"`
	UavId    int64 `protobuf:"varint,3,opt,name=UavId,proto3" json:"UavId,omitempty"`
}

func (x *ListUavPlanReq) Reset() {
	*x = ListUavPlanReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_uav_proto_msgTypes[59]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListUavPlanReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListUavPlanReq) ProtoMessage() {}

func (x *ListUavPlanReq) ProtoReflect() protoreflect.Message {
	mi := &file_uav_proto_msgTypes[59]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListUavPlanReq.ProtoReflect.Descriptor instead.
func (*ListUavPlanReq) Descriptor() ([]byte, []int) {
	return file_uav_proto_rawDescGZIP(), []int{59}
}

func (x *ListUavPlanReq) GetCurrent() int64 {
	if x != nil {
		return x.Current
	}
	return 0
}

func (x *ListUavPlanReq) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *ListUavPlanReq) GetUavId() int64 {
	if x != nil {
		return x.UavId
	}
	return 0
}

type ListtUavPlanData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         int64  `protobuf:"varint,1,opt,name=Id,proto3" json:"Id,omitempty"`
	UavId      int64  `protobuf:"varint,2,opt,name=Uav_id,json=UavId,proto3" json:"Uav_id,omitempty"` // 无人机ID
	Plan       string `protobuf:"bytes,3,opt,name=Plan,proto3" json:"Plan,omitempty"`                 //寻飞计划
	FlyId      int64  `protobuf:"varint,4,opt,name=Fly_id,json=FlyId,proto3" json:"Fly_id,omitempty"` //航线ID
	CreateTime string `protobuf:"bytes,5,opt,name=CreateTime,proto3" json:"CreateTime,omitempty"`     //注册时间
}

func (x *ListtUavPlanData) Reset() {
	*x = ListtUavPlanData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_uav_proto_msgTypes[60]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListtUavPlanData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListtUavPlanData) ProtoMessage() {}

func (x *ListtUavPlanData) ProtoReflect() protoreflect.Message {
	mi := &file_uav_proto_msgTypes[60]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListtUavPlanData.ProtoReflect.Descriptor instead.
func (*ListtUavPlanData) Descriptor() ([]byte, []int) {
	return file_uav_proto_rawDescGZIP(), []int{60}
}

func (x *ListtUavPlanData) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ListtUavPlanData) GetUavId() int64 {
	if x != nil {
		return x.UavId
	}
	return 0
}

func (x *ListtUavPlanData) GetPlan() string {
	if x != nil {
		return x.Plan
	}
	return ""
}

func (x *ListtUavPlanData) GetFlyId() int64 {
	if x != nil {
		return x.FlyId
	}
	return 0
}

func (x *ListtUavPlanData) GetCreateTime() string {
	if x != nil {
		return x.CreateTime
	}
	return ""
}

type ListUavPlanResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total int64               `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
	List  []*ListtUavPlanData `protobuf:"bytes,2,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *ListUavPlanResp) Reset() {
	*x = ListUavPlanResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_uav_proto_msgTypes[61]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListUavPlanResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListUavPlanResp) ProtoMessage() {}

func (x *ListUavPlanResp) ProtoReflect() protoreflect.Message {
	mi := &file_uav_proto_msgTypes[61]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListUavPlanResp.ProtoReflect.Descriptor instead.
func (*ListUavPlanResp) Descriptor() ([]byte, []int) {
	return file_uav_proto_rawDescGZIP(), []int{61}
}

func (x *ListUavPlanResp) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *ListUavPlanResp) GetList() []*ListtUavPlanData {
	if x != nil {
		return x.List
	}
	return nil
}

type UpdateUavPlanReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         int64  `protobuf:"varint,1,opt,name=Id,proto3" json:"Id,omitempty"`
	UavId      int64  `protobuf:"varint,2,opt,name=Uav_id,json=UavId,proto3" json:"Uav_id,omitempty"` // 无人机ID
	Plan       string `protobuf:"bytes,3,opt,name=Plan,proto3" json:"Plan,omitempty"`                 //寻飞计划
	FlyId      int64  `protobuf:"varint,4,opt,name=Fly_id,json=FlyId,proto3" json:"Fly_id,omitempty"` //航线ID
	CreateTime string `protobuf:"bytes,5,opt,name=CreateTime,proto3" json:"CreateTime,omitempty"`     //注册时间
}

func (x *UpdateUavPlanReq) Reset() {
	*x = UpdateUavPlanReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_uav_proto_msgTypes[62]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateUavPlanReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateUavPlanReq) ProtoMessage() {}

func (x *UpdateUavPlanReq) ProtoReflect() protoreflect.Message {
	mi := &file_uav_proto_msgTypes[62]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateUavPlanReq.ProtoReflect.Descriptor instead.
func (*UpdateUavPlanReq) Descriptor() ([]byte, []int) {
	return file_uav_proto_rawDescGZIP(), []int{62}
}

func (x *UpdateUavPlanReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UpdateUavPlanReq) GetUavId() int64 {
	if x != nil {
		return x.UavId
	}
	return 0
}

func (x *UpdateUavPlanReq) GetPlan() string {
	if x != nil {
		return x.Plan
	}
	return ""
}

func (x *UpdateUavPlanReq) GetFlyId() int64 {
	if x != nil {
		return x.FlyId
	}
	return 0
}

func (x *UpdateUavPlanReq) GetCreateTime() string {
	if x != nil {
		return x.CreateTime
	}
	return ""
}

type UpdateUavPlanResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    string `protobuf:"bytes,1,opt,name=Code,proto3" json:"Code,omitempty"`
	Message string `protobuf:"bytes,2,opt,name=Message,proto3" json:"Message,omitempty"`
}

func (x *UpdateUavPlanResp) Reset() {
	*x = UpdateUavPlanResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_uav_proto_msgTypes[63]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateUavPlanResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateUavPlanResp) ProtoMessage() {}

func (x *UpdateUavPlanResp) ProtoReflect() protoreflect.Message {
	mi := &file_uav_proto_msgTypes[63]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateUavPlanResp.ProtoReflect.Descriptor instead.
func (*UpdateUavPlanResp) Descriptor() ([]byte, []int) {
	return file_uav_proto_rawDescGZIP(), []int{63}
}

func (x *UpdateUavPlanResp) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *UpdateUavPlanResp) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type UavPlanFindByIdReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id   int64  `protobuf:"varint,1,opt,name=Id,proto3" json:"Id,omitempty"`
	Name string `protobuf:"bytes,2,opt,name=Name,proto3" json:"Name,omitempty"`
}

func (x *UavPlanFindByIdReq) Reset() {
	*x = UavPlanFindByIdReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_uav_proto_msgTypes[64]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UavPlanFindByIdReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UavPlanFindByIdReq) ProtoMessage() {}

func (x *UavPlanFindByIdReq) ProtoReflect() protoreflect.Message {
	mi := &file_uav_proto_msgTypes[64]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UavPlanFindByIdReq.ProtoReflect.Descriptor instead.
func (*UavPlanFindByIdReq) Descriptor() ([]byte, []int) {
	return file_uav_proto_rawDescGZIP(), []int{64}
}

func (x *UavPlanFindByIdReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UavPlanFindByIdReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type DeleteUavPlanReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ids []int64 `protobuf:"varint,1,rep,packed,name=ids,proto3" json:"ids,omitempty"`
}

func (x *DeleteUavPlanReq) Reset() {
	*x = DeleteUavPlanReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_uav_proto_msgTypes[65]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteUavPlanReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteUavPlanReq) ProtoMessage() {}

func (x *DeleteUavPlanReq) ProtoReflect() protoreflect.Message {
	mi := &file_uav_proto_msgTypes[65]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteUavPlanReq.ProtoReflect.Descriptor instead.
func (*DeleteUavPlanReq) Descriptor() ([]byte, []int) {
	return file_uav_proto_rawDescGZIP(), []int{65}
}

func (x *DeleteUavPlanReq) GetIds() []int64 {
	if x != nil {
		return x.Ids
	}
	return nil
}

type DeleteUavPlanResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code string `protobuf:"bytes,1,opt,name=Code,proto3" json:"Code,omitempty"`
}

func (x *DeleteUavPlanResp) Reset() {
	*x = DeleteUavPlanResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_uav_proto_msgTypes[66]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteUavPlanResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteUavPlanResp) ProtoMessage() {}

func (x *DeleteUavPlanResp) ProtoReflect() protoreflect.Message {
	mi := &file_uav_proto_msgTypes[66]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteUavPlanResp.ProtoReflect.Descriptor instead.
func (*DeleteUavPlanResp) Descriptor() ([]byte, []int) {
	return file_uav_proto_rawDescGZIP(), []int{66}
}

func (x *DeleteUavPlanResp) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

type UavMMQAddReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name      string  `protobuf:"bytes,1,opt,name=Name,proto3" json:"Name,omitempty"`
	Image     string  `protobuf:"bytes,2,opt,name=Image,proto3" json:"Image,omitempty"`
	Type      int64   `protobuf:"varint,3,opt,name=Type,proto3" json:"Type,omitempty"`
	Code      string  `protobuf:"bytes,4,opt,name=Code,proto3" json:"Code,omitempty"`
	Level     int64   `protobuf:"varint,5,opt,name=Level,proto3" json:"Level,omitempty"`
	Count     int64   `protobuf:"varint,6,opt,name=Count,proto3" json:"Count,omitempty"`
	Platform  int64   `protobuf:"varint,7,opt,name=Platform,proto3" json:"Platform,omitempty"`
	Starttime string  `protobuf:"bytes,8,opt,name=Starttime,proto3" json:"Starttime,omitempty"`
	Endtime   string  `protobuf:"bytes,9,opt,name=Endtime,proto3" json:"Endtime,omitempty"`
	Note      string  `protobuf:"bytes,10,opt,name=Note,proto3" json:"Note,omitempty"`
	Confirm   int64   `protobuf:"varint,11,opt,name=Confirm,proto3" json:"Confirm,omitempty"`
	Lan       float64 `protobuf:"fixed64,12,opt,name=Lan,proto3" json:"Lan,omitempty"`
	Lon       float64 `protobuf:"fixed64,13,opt,name=Lon,proto3" json:"Lon,omitempty"`
}

func (x *UavMMQAddReq) Reset() {
	*x = UavMMQAddReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_uav_proto_msgTypes[67]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UavMMQAddReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UavMMQAddReq) ProtoMessage() {}

func (x *UavMMQAddReq) ProtoReflect() protoreflect.Message {
	mi := &file_uav_proto_msgTypes[67]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UavMMQAddReq.ProtoReflect.Descriptor instead.
func (*UavMMQAddReq) Descriptor() ([]byte, []int) {
	return file_uav_proto_rawDescGZIP(), []int{67}
}

func (x *UavMMQAddReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UavMMQAddReq) GetImage() string {
	if x != nil {
		return x.Image
	}
	return ""
}

func (x *UavMMQAddReq) GetType() int64 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *UavMMQAddReq) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *UavMMQAddReq) GetLevel() int64 {
	if x != nil {
		return x.Level
	}
	return 0
}

func (x *UavMMQAddReq) GetCount() int64 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *UavMMQAddReq) GetPlatform() int64 {
	if x != nil {
		return x.Platform
	}
	return 0
}

func (x *UavMMQAddReq) GetStarttime() string {
	if x != nil {
		return x.Starttime
	}
	return ""
}

func (x *UavMMQAddReq) GetEndtime() string {
	if x != nil {
		return x.Endtime
	}
	return ""
}

func (x *UavMMQAddReq) GetNote() string {
	if x != nil {
		return x.Note
	}
	return ""
}

func (x *UavMMQAddReq) GetConfirm() int64 {
	if x != nil {
		return x.Confirm
	}
	return 0
}

func (x *UavMMQAddReq) GetLan() float64 {
	if x != nil {
		return x.Lan
	}
	return 0
}

func (x *UavMMQAddReq) GetLon() float64 {
	if x != nil {
		return x.Lon
	}
	return 0
}

type UavMMQAddResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pong string `protobuf:"bytes,1,opt,name=pong,proto3" json:"pong,omitempty"`
}

func (x *UavMMQAddResp) Reset() {
	*x = UavMMQAddResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_uav_proto_msgTypes[68]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UavMMQAddResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UavMMQAddResp) ProtoMessage() {}

func (x *UavMMQAddResp) ProtoReflect() protoreflect.Message {
	mi := &file_uav_proto_msgTypes[68]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UavMMQAddResp.ProtoReflect.Descriptor instead.
func (*UavMMQAddResp) Descriptor() ([]byte, []int) {
	return file_uav_proto_rawDescGZIP(), []int{68}
}

func (x *UavMMQAddResp) GetPong() string {
	if x != nil {
		return x.Pong
	}
	return ""
}

type UavMMQListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Current  int64 `protobuf:"varint,1,opt,name=current,proto3" json:"current,omitempty"`
	PageSize int64 `protobuf:"varint,2,opt,name=pageSize,proto3" json:"pageSize,omitempty"`
}

func (x *UavMMQListReq) Reset() {
	*x = UavMMQListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_uav_proto_msgTypes[69]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UavMMQListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UavMMQListReq) ProtoMessage() {}

func (x *UavMMQListReq) ProtoReflect() protoreflect.Message {
	mi := &file_uav_proto_msgTypes[69]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UavMMQListReq.ProtoReflect.Descriptor instead.
func (*UavMMQListReq) Descriptor() ([]byte, []int) {
	return file_uav_proto_rawDescGZIP(), []int{69}
}

func (x *UavMMQListReq) GetCurrent() int64 {
	if x != nil {
		return x.Current
	}
	return 0
}

func (x *UavMMQListReq) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

type UavMMQListData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        int64   `protobuf:"varint,1,opt,name=Id,proto3" json:"Id,omitempty"`
	Name      string  `protobuf:"bytes,2,opt,name=Name,proto3" json:"Name,omitempty"`
	Image     string  `protobuf:"bytes,3,opt,name=Image,proto3" json:"Image,omitempty"`
	Type      int64   `protobuf:"varint,4,opt,name=Type,proto3" json:"Type,omitempty"`
	Code      string  `protobuf:"bytes,5,opt,name=Code,proto3" json:"Code,omitempty"`
	Level     int64   `protobuf:"varint,6,opt,name=Level,proto3" json:"Level,omitempty"`
	Count     int64   `protobuf:"varint,7,opt,name=Count,proto3" json:"Count,omitempty"`
	Platform  int64   `protobuf:"varint,8,opt,name=Platform,proto3" json:"Platform,omitempty"`
	Starttime string  `protobuf:"bytes,9,opt,name=Starttime,proto3" json:"Starttime,omitempty"`
	Endtime   string  `protobuf:"bytes,10,opt,name=Endtime,proto3" json:"Endtime,omitempty"`
	Note      string  `protobuf:"bytes,11,opt,name=Note,proto3" json:"Note,omitempty"`
	Confirm   int64   `protobuf:"varint,12,opt,name=Confirm,proto3" json:"Confirm,omitempty"`
	Lan       float64 `protobuf:"fixed64,13,opt,name=Lan,proto3" json:"Lan,omitempty"`
	Lon       float64 `protobuf:"fixed64,14,opt,name=Lon,proto3" json:"Lon,omitempty"`
}

func (x *UavMMQListData) Reset() {
	*x = UavMMQListData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_uav_proto_msgTypes[70]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UavMMQListData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UavMMQListData) ProtoMessage() {}

func (x *UavMMQListData) ProtoReflect() protoreflect.Message {
	mi := &file_uav_proto_msgTypes[70]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UavMMQListData.ProtoReflect.Descriptor instead.
func (*UavMMQListData) Descriptor() ([]byte, []int) {
	return file_uav_proto_rawDescGZIP(), []int{70}
}

func (x *UavMMQListData) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UavMMQListData) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UavMMQListData) GetImage() string {
	if x != nil {
		return x.Image
	}
	return ""
}

func (x *UavMMQListData) GetType() int64 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *UavMMQListData) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *UavMMQListData) GetLevel() int64 {
	if x != nil {
		return x.Level
	}
	return 0
}

func (x *UavMMQListData) GetCount() int64 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *UavMMQListData) GetPlatform() int64 {
	if x != nil {
		return x.Platform
	}
	return 0
}

func (x *UavMMQListData) GetStarttime() string {
	if x != nil {
		return x.Starttime
	}
	return ""
}

func (x *UavMMQListData) GetEndtime() string {
	if x != nil {
		return x.Endtime
	}
	return ""
}

func (x *UavMMQListData) GetNote() string {
	if x != nil {
		return x.Note
	}
	return ""
}

func (x *UavMMQListData) GetConfirm() int64 {
	if x != nil {
		return x.Confirm
	}
	return 0
}

func (x *UavMMQListData) GetLan() float64 {
	if x != nil {
		return x.Lan
	}
	return 0
}

func (x *UavMMQListData) GetLon() float64 {
	if x != nil {
		return x.Lon
	}
	return 0
}

type UavMMQListResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total int64             `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
	Data  []*UavMMQListData `protobuf:"bytes,2,rep,name=Data,proto3" json:"Data,omitempty"`
}

func (x *UavMMQListResp) Reset() {
	*x = UavMMQListResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_uav_proto_msgTypes[71]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UavMMQListResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UavMMQListResp) ProtoMessage() {}

func (x *UavMMQListResp) ProtoReflect() protoreflect.Message {
	mi := &file_uav_proto_msgTypes[71]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UavMMQListResp.ProtoReflect.Descriptor instead.
func (*UavMMQListResp) Descriptor() ([]byte, []int) {
	return file_uav_proto_rawDescGZIP(), []int{71}
}

func (x *UavMMQListResp) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *UavMMQListResp) GetData() []*UavMMQListData {
	if x != nil {
		return x.Data
	}
	return nil
}

type UavMMQFindByIdReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UavMMQId int64 `protobuf:"varint,1,opt,name=UavMMQId,proto3" json:"UavMMQId,omitempty"`
}

func (x *UavMMQFindByIdReq) Reset() {
	*x = UavMMQFindByIdReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_uav_proto_msgTypes[72]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UavMMQFindByIdReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UavMMQFindByIdReq) ProtoMessage() {}

func (x *UavMMQFindByIdReq) ProtoReflect() protoreflect.Message {
	mi := &file_uav_proto_msgTypes[72]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UavMMQFindByIdReq.ProtoReflect.Descriptor instead.
func (*UavMMQFindByIdReq) Descriptor() ([]byte, []int) {
	return file_uav_proto_rawDescGZIP(), []int{72}
}

func (x *UavMMQFindByIdReq) GetUavMMQId() int64 {
	if x != nil {
		return x.UavMMQId
	}
	return 0
}

type UavMMQFindByIdResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         int64  `protobuf:"varint,1,opt,name=Id,proto3" json:"Id,omitempty"`
	Name       string `protobuf:"bytes,2,opt,name=Name,proto3" json:"Name,omitempty"`
	Ip         string `protobuf:"bytes,3,opt,name=Ip,proto3" json:"Ip,omitempty"`
	Port       string `protobuf:"bytes,4,opt,name=Port,proto3" json:"Port,omitempty"`
	HangarIp   string `protobuf:"bytes,5,opt,name=Hangar_ip,json=HangarIp,proto3" json:"Hangar_ip,omitempty"`
	HangarPort string `protobuf:"bytes,6,opt,name=Hangar_port,json=HangarPort,proto3" json:"Hangar_port,omitempty"`
}

func (x *UavMMQFindByIdResp) Reset() {
	*x = UavMMQFindByIdResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_uav_proto_msgTypes[73]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UavMMQFindByIdResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UavMMQFindByIdResp) ProtoMessage() {}

func (x *UavMMQFindByIdResp) ProtoReflect() protoreflect.Message {
	mi := &file_uav_proto_msgTypes[73]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UavMMQFindByIdResp.ProtoReflect.Descriptor instead.
func (*UavMMQFindByIdResp) Descriptor() ([]byte, []int) {
	return file_uav_proto_rawDescGZIP(), []int{73}
}

func (x *UavMMQFindByIdResp) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UavMMQFindByIdResp) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UavMMQFindByIdResp) GetIp() string {
	if x != nil {
		return x.Ip
	}
	return ""
}

func (x *UavMMQFindByIdResp) GetPort() string {
	if x != nil {
		return x.Port
	}
	return ""
}

func (x *UavMMQFindByIdResp) GetHangarIp() string {
	if x != nil {
		return x.HangarIp
	}
	return ""
}

func (x *UavMMQFindByIdResp) GetHangarPort() string {
	if x != nil {
		return x.HangarPort
	}
	return ""
}

type UavMMQFindByIdsReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UavMMQIds []int64 `protobuf:"varint,1,rep,packed,name=UavMMQIds,proto3" json:"UavMMQIds,omitempty"`
}

func (x *UavMMQFindByIdsReq) Reset() {
	*x = UavMMQFindByIdsReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_uav_proto_msgTypes[74]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UavMMQFindByIdsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UavMMQFindByIdsReq) ProtoMessage() {}

func (x *UavMMQFindByIdsReq) ProtoReflect() protoreflect.Message {
	mi := &file_uav_proto_msgTypes[74]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UavMMQFindByIdsReq.ProtoReflect.Descriptor instead.
func (*UavMMQFindByIdsReq) Descriptor() ([]byte, []int) {
	return file_uav_proto_rawDescGZIP(), []int{74}
}

func (x *UavMMQFindByIdsReq) GetUavMMQIds() []int64 {
	if x != nil {
		return x.UavMMQIds
	}
	return nil
}

type UavMMQFindByIdsResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total int64             `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
	List  []*UavMMQListData `protobuf:"bytes,2,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *UavMMQFindByIdsResp) Reset() {
	*x = UavMMQFindByIdsResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_uav_proto_msgTypes[75]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UavMMQFindByIdsResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UavMMQFindByIdsResp) ProtoMessage() {}

func (x *UavMMQFindByIdsResp) ProtoReflect() protoreflect.Message {
	mi := &file_uav_proto_msgTypes[75]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UavMMQFindByIdsResp.ProtoReflect.Descriptor instead.
func (*UavMMQFindByIdsResp) Descriptor() ([]byte, []int) {
	return file_uav_proto_rawDescGZIP(), []int{75}
}

func (x *UavMMQFindByIdsResp) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *UavMMQFindByIdsResp) GetList() []*UavMMQListData {
	if x != nil {
		return x.List
	}
	return nil
}

var File_uav_proto protoreflect.FileDescriptor

var file_uav_proto_rawDesc = []byte{
	0x0a, 0x09, 0x75, 0x61, 0x76, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x09, 0x75, 0x61, 0x76,
	0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x22, 0x97, 0x01, 0x0a, 0x0f, 0x55, 0x61, 0x76, 0x44, 0x65,
	0x76, 0x69, 0x63, 0x65, 0x41, 0x64, 0x64, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x4e, 0x61,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x0e,
	0x0a, 0x02, 0x49, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x49, 0x70, 0x12, 0x12,
	0x0a, 0x04, 0x50, 0x6f, 0x72, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x50, 0x6f,
	0x72, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x48, 0x61, 0x6e, 0x67, 0x61, 0x72, 0x5f, 0x69, 0x70, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x48, 0x61, 0x6e, 0x67, 0x61, 0x72, 0x49, 0x70, 0x12,
	0x1f, 0x0a, 0x0b, 0x48, 0x61, 0x6e, 0x67, 0x61, 0x72, 0x5f, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x48, 0x61, 0x6e, 0x67, 0x61, 0x72, 0x50, 0x6f, 0x72, 0x74,
	0x22, 0x26, 0x0a, 0x10, 0x55, 0x61, 0x76, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x41, 0x64, 0x64,
	0x52, 0x65, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x6f, 0x6e, 0x67, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x70, 0x6f, 0x6e, 0x67, 0x22, 0x48, 0x0a, 0x10, 0x55, 0x61, 0x76, 0x44,
	0x65, 0x76, 0x69, 0x63, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x12, 0x18, 0x0a, 0x07,
	0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x63,
	0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69,
	0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69,
	0x7a, 0x65, 0x22, 0x99, 0x01, 0x0a, 0x11, 0x55, 0x61, 0x76, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65,
	0x4c, 0x69, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x0e, 0x0a, 0x02,
	0x49, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x49, 0x70, 0x12, 0x12, 0x0a, 0x04,
	0x50, 0x6f, 0x72, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x50, 0x6f, 0x72, 0x74,
	0x12, 0x1b, 0x0a, 0x09, 0x48, 0x61, 0x6e, 0x67, 0x61, 0x72, 0x5f, 0x69, 0x70, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x48, 0x61, 0x6e, 0x67, 0x61, 0x72, 0x49, 0x70, 0x12, 0x1f, 0x0a,
	0x0b, 0x48, 0x61, 0x6e, 0x67, 0x61, 0x72, 0x5f, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x0a, 0x48, 0x61, 0x6e, 0x67, 0x61, 0x72, 0x50, 0x6f, 0x72, 0x74, 0x22, 0xd0,
	0x01, 0x0a, 0x0e, 0x55, 0x61, 0x76, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x44, 0x61, 0x74,
	0x61, 0x12, 0x10, 0x0a, 0x03, 0x43, 0x6d, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x43, 0x6d, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x15, 0x0a, 0x06, 0x75, 0x61, 0x76, 0x5f, 0x69,
	0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x75, 0x61, 0x76, 0x49, 0x64, 0x12, 0x15,
	0x0a, 0x06, 0x66, 0x6c, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05,
	0x66, 0x6c, 0x79, 0x49, 0x64, 0x12, 0x15, 0x0a, 0x06, 0x66, 0x6c, 0x79, 0x5f, 0x6f, 0x70, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x66, 0x6c, 0x79, 0x4f, 0x70, 0x12, 0x1d, 0x0a, 0x0a,
	0x68, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x09, 0x68, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x49, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x6c,
	0x61, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x01, 0x52, 0x03, 0x6c, 0x61, 0x74, 0x12, 0x10, 0x0a,
	0x03, 0x6c, 0x6f, 0x6e, 0x18, 0x08, 0x20, 0x01, 0x28, 0x01, 0x52, 0x03, 0x6c, 0x6f, 0x6e, 0x12,
	0x10, 0x0a, 0x03, 0x61, 0x6c, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x01, 0x52, 0x03, 0x61, 0x6c,
	0x74, 0x22, 0x5b, 0x0a, 0x11, 0x55, 0x61, 0x76, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x4c, 0x69,
	0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x30, 0x0a, 0x04,
	0x44, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x75, 0x61, 0x76,
	0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x55, 0x61, 0x76, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65,
	0x4c, 0x69, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x44, 0x61, 0x74, 0x61, 0x22, 0x84,
	0x01, 0x0a, 0x14, 0x55, 0x61, 0x76, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x46, 0x69, 0x6e, 0x64,
	0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x71, 0x12, 0x20, 0x0a, 0x0b, 0x55, 0x61, 0x76, 0x44, 0x65,
	0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x55, 0x61,
	0x76, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x54, 0x79, 0x70,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1c, 0x0a,
	0x09, 0x53, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x53, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x45,
	0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x45, 0x6e,
	0x64, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x9d, 0x01, 0x0a, 0x15, 0x55, 0x61, 0x76, 0x44, 0x65, 0x76,
	0x69, 0x63, 0x65, 0x46, 0x69, 0x6e, 0x64, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x73, 0x70, 0x12,
	0x0e, 0x0a, 0x02, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x49, 0x64, 0x12,
	0x12, 0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x02, 0x49, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x50, 0x6f, 0x72, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x50, 0x6f, 0x72, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x48, 0x61, 0x6e, 0x67, 0x61,
	0x72, 0x5f, 0x69, 0x70, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x48, 0x61, 0x6e, 0x67,
	0x61, 0x72, 0x49, 0x70, 0x12, 0x1f, 0x0a, 0x0b, 0x48, 0x61, 0x6e, 0x67, 0x61, 0x72, 0x5f, 0x70,
	0x6f, 0x72, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x48, 0x61, 0x6e, 0x67, 0x61,
	0x72, 0x50, 0x6f, 0x72, 0x74, 0x22, 0x50, 0x0a, 0x0a, 0x55, 0x61, 0x76, 0x46, 0x6c, 0x79, 0x44,
	0x61, 0x74, 0x61, 0x12, 0x10, 0x0a, 0x03, 0x63, 0x6d, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x63, 0x6d, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x1c, 0x0a, 0x09, 0x68, 0x69, 0x73,
	0x74, 0x6f, 0x72, 0x79, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x68, 0x69,
	0x73, 0x74, 0x6f, 0x72, 0x79, 0x69, 0x64, 0x22, 0xe2, 0x01, 0x0a, 0x0c, 0x55, 0x61, 0x76, 0x41,
	0x6c, 0x65, 0x72, 0x74, 0x44, 0x61, 0x74, 0x61, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05,
	0x69, 0x6d, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x69, 0x6d, 0x61,
	0x67, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x43, 0x63, 0x6f, 0x64, 0x65, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x43, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03,
	0x6c, 0x61, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x01, 0x52, 0x03, 0x6c, 0x61, 0x74, 0x12, 0x10,
	0x0a, 0x03, 0x6c, 0x6f, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x01, 0x52, 0x03, 0x6c, 0x6f, 0x6e,
	0x12, 0x10, 0x0a, 0x03, 0x61, 0x6c, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x01, 0x52, 0x03, 0x61,
	0x6c, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d,
	0x65, 0x12, 0x19, 0x0a, 0x08, 0x65, 0x6e, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x3b, 0x0a, 0x15,
	0x55, 0x61, 0x76, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x46, 0x69, 0x6e, 0x64, 0x42, 0x79, 0x49,
	0x64, 0x73, 0x52, 0x65, 0x71, 0x12, 0x22, 0x0a, 0x0c, 0x55, 0x61, 0x76, 0x44, 0x65, 0x76, 0x69,
	0x63, 0x65, 0x49, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x03, 0x52, 0x0c, 0x55, 0x61, 0x76,
	0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x73, 0x22, 0x60, 0x0a, 0x16, 0x55, 0x61, 0x76,
	0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x46, 0x69, 0x6e, 0x64, 0x42, 0x79, 0x49, 0x64, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x30, 0x0a, 0x04, 0x6c, 0x69, 0x73,
	0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x75, 0x61, 0x76, 0x63, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x2e, 0x55, 0x61, 0x76, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x4c, 0x69, 0x73,
	0x74, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x22, 0x50, 0x0a, 0x0c, 0x41,
	0x64, 0x64, 0x55, 0x61, 0x76, 0x46, 0x6c, 0x79, 0x52, 0x65, 0x71, 0x12, 0x12, 0x0a, 0x04, 0x4e,
	0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x12, 0x0a, 0x04, 0x44, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x44,
	0x61, 0x74, 0x61, 0x12, 0x18, 0x0a, 0x07, 0x43, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x43, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x22, 0x3d, 0x0a,
	0x0d, 0x41, 0x64, 0x64, 0x55, 0x61, 0x76, 0x46, 0x6c, 0x79, 0x52, 0x65, 0x73, 0x70, 0x12, 0x12,
	0x0a, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x43, 0x6f,
	0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x23, 0x0a, 0x0d,
	0x55, 0x61, 0x76, 0x46, 0x6c, 0x79, 0x41, 0x64, 0x64, 0x52, 0x65, 0x73, 0x70, 0x12, 0x12, 0x0a,
	0x04, 0x70, 0x6f, 0x6e, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x6f, 0x6e,
	0x67, 0x22, 0x45, 0x0a, 0x0d, 0x4c, 0x69, 0x73, 0x74, 0x55, 0x61, 0x76, 0x46, 0x6c, 0x79, 0x52,
	0x65, 0x71, 0x12, 0x18, 0x0a, 0x07, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x07, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x12, 0x1a, 0x0a, 0x08,
	0x50, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08,
	0x50, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x22, 0x83, 0x01, 0x0a, 0x0f, 0x4c, 0x69, 0x73,
	0x74, 0x74, 0x55, 0x61, 0x76, 0x46, 0x6c, 0x79, 0x44, 0x61, 0x74, 0x61, 0x12, 0x0e, 0x0a, 0x02,
	0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04,
	0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x12, 0x0a, 0x04, 0x44, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x44, 0x61, 0x74, 0x61, 0x12, 0x1e, 0x0a, 0x0a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69,
	0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x54, 0x69, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x43, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x43, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x22, 0x56,
	0x0a, 0x0e, 0x4c, 0x69, 0x73, 0x74, 0x55, 0x61, 0x76, 0x46, 0x6c, 0x79, 0x52, 0x65, 0x73, 0x70,
	0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x2e, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x75, 0x61, 0x76, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x2e, 0x4c, 0x69, 0x73, 0x74, 0x74, 0x55, 0x61, 0x76, 0x46, 0x6c, 0x79, 0x44, 0x61, 0x74, 0x61,
	0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x22, 0x73, 0x0a, 0x0f, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x55, 0x61, 0x76, 0x46, 0x6c, 0x79, 0x52, 0x65, 0x71, 0x12, 0x12, 0x0a, 0x04, 0x4e, 0x61, 0x6d,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a,
	0x04, 0x44, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x44, 0x61, 0x74,
	0x61, 0x12, 0x1e, 0x0a, 0x0a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d,
	0x65, 0x12, 0x18, 0x0a, 0x07, 0x43, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x43, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x22, 0x40, 0x0a, 0x10, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x55, 0x61, 0x76, 0x46, 0x6c, 0x79, 0x52, 0x65, 0x73, 0x70, 0x12,
	0x12, 0x0a, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x43,
	0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x37, 0x0a,
	0x11, 0x55, 0x61, 0x76, 0x46, 0x6c, 0x79, 0x46, 0x69, 0x6e, 0x64, 0x42, 0x79, 0x49, 0x64, 0x52,
	0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02,
	0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x23, 0x0a, 0x0f, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x55, 0x61, 0x76, 0x46, 0x6c, 0x79, 0x52, 0x65, 0x71, 0x12, 0x10, 0x0a, 0x03, 0x69, 0x64, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x03, 0x52, 0x03, 0x69, 0x64, 0x73, 0x22, 0x26, 0x0a, 0x10, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x55, 0x61, 0x76, 0x46, 0x6c, 0x79, 0x52, 0x65, 0x73, 0x70, 0x12,
	0x12, 0x0a, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x43,
	0x6f, 0x64, 0x65, 0x22, 0x94, 0x01, 0x0a, 0x10, 0x41, 0x64, 0x64, 0x55, 0x61, 0x76, 0x48, 0x69,
	0x73, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x71, 0x12, 0x14, 0x0a, 0x05, 0x55, 0x61, 0x76, 0x49,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x55, 0x61, 0x76, 0x49, 0x64, 0x12, 0x14,
	0x0a, 0x05, 0x46, 0x6c, 0x79, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x46,
	0x6c, 0x79, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72,
	0x12, 0x1e, 0x0a, 0x0a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65,
	0x12, 0x18, 0x0a, 0x07, 0x45, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x45, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x41, 0x0a, 0x11, 0x41, 0x64,
	0x64, 0x55, 0x61, 0x76, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x12,
	0x12, 0x0a, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x43,
	0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x27, 0x0a,
	0x11, 0x55, 0x61, 0x76, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x41, 0x64, 0x64, 0x52, 0x65,
	0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x6f, 0x6e, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x70, 0x6f, 0x6e, 0x67, 0x22, 0x5f, 0x0a, 0x11, 0x4c, 0x69, 0x73, 0x74, 0x55, 0x61,
	0x76, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x71, 0x12, 0x18, 0x0a, 0x07, 0x43,
	0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x43, 0x75,
	0x72, 0x72, 0x65, 0x6e, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x50, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x50, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a,
	0x65, 0x12, 0x14, 0x0a, 0x05, 0x55, 0x61, 0x76, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x05, 0x55, 0x61, 0x76, 0x49, 0x64, 0x22, 0xa7, 0x01, 0x0a, 0x13, 0x4c, 0x69, 0x73, 0x74,
	0x74, 0x55, 0x61, 0x76, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x44, 0x61, 0x74, 0x61, 0x12,
	0x0e, 0x0a, 0x02, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x49, 0x64, 0x12,
	0x14, 0x0a, 0x05, 0x55, 0x61, 0x76, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05,
	0x55, 0x61, 0x76, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x46, 0x6c, 0x79, 0x49, 0x44, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x46, 0x6c, 0x79, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x4f,
	0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x4f,
	0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x1e, 0x0a, 0x0a, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x45, 0x6e, 0x64, 0x54, 0x69,
	0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x45, 0x6e, 0x64, 0x54, 0x69, 0x6d,
	0x65, 0x22, 0x5e, 0x0a, 0x12, 0x4c, 0x69, 0x73, 0x74, 0x55, 0x61, 0x76, 0x48, 0x69, 0x73, 0x74,
	0x6f, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x32, 0x0a,
	0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x75, 0x61,
	0x76, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x74, 0x55, 0x61, 0x76,
	0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x6c, 0x69, 0x73,
	0x74, 0x22, 0xa7, 0x01, 0x0a, 0x13, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x55, 0x61, 0x76, 0x48,
	0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x55, 0x61, 0x76,
	0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x55, 0x61, 0x76, 0x49, 0x64, 0x12,
	0x14, 0x0a, 0x05, 0x46, 0x6c, 0x79, 0x49, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05,
	0x46, 0x6c, 0x79, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f,
	0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f,
	0x72, 0x12, 0x1e, 0x0a, 0x0a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d,
	0x65, 0x12, 0x18, 0x0a, 0x07, 0x45, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x45, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x44, 0x0a, 0x14, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x55, 0x61, 0x76, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x52,
	0x65, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x22, 0x3b, 0x0a, 0x15, 0x55, 0x61, 0x76, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x46,
	0x69, 0x6e, 0x64, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x4e, 0x61,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x27,
	0x0a, 0x13, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x55, 0x61, 0x76, 0x48, 0x69, 0x73, 0x74, 0x6f,
	0x72, 0x79, 0x52, 0x65, 0x71, 0x12, 0x10, 0x0a, 0x03, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x03, 0x52, 0x03, 0x69, 0x64, 0x73, 0x22, 0x2a, 0x0a, 0x14, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x55, 0x61, 0x76, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x12,
	0x12, 0x0a, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x43,
	0x6f, 0x64, 0x65, 0x22, 0x4e, 0x0a, 0x10, 0x41, 0x64, 0x64, 0x55, 0x61, 0x76, 0x4e, 0x65, 0x74,
	0x77, 0x6f, 0x72, 0x6b, 0x52, 0x65, 0x71, 0x12, 0x12, 0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x42,
	0x61, 0x6e, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x42, 0x61, 0x6e, 0x64, 0x12,
	0x12, 0x0a, 0x04, 0x54, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x54,
	0x79, 0x70, 0x65, 0x22, 0x41, 0x0a, 0x11, 0x41, 0x64, 0x64, 0x55, 0x61, 0x76, 0x4e, 0x65, 0x74,
	0x77, 0x6f, 0x72, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x43, 0x6f, 0x64, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x27, 0x0a, 0x11, 0x55, 0x61, 0x76, 0x4e, 0x65, 0x74,
	0x77, 0x6f, 0x72, 0x6b, 0x41, 0x64, 0x64, 0x52, 0x65, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x70,
	0x6f, 0x6e, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x6f, 0x6e, 0x67, 0x22,
	0x5f, 0x0a, 0x11, 0x4c, 0x69, 0x73, 0x74, 0x55, 0x61, 0x76, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72,
	0x6b, 0x52, 0x65, 0x71, 0x12, 0x18, 0x0a, 0x07, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x12, 0x1a,
	0x0a, 0x08, 0x50, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x08, 0x50, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x55, 0x61,
	0x76, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x55, 0x61, 0x76, 0x49, 0x64,
	0x22, 0x61, 0x0a, 0x13, 0x4c, 0x69, 0x73, 0x74, 0x74, 0x55, 0x61, 0x76, 0x4e, 0x65, 0x74, 0x77,
	0x6f, 0x72, 0x6b, 0x44, 0x61, 0x74, 0x61, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x02, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x42,
	0x61, 0x6e, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x42, 0x61, 0x6e, 0x64, 0x12,
	0x12, 0x0a, 0x04, 0x54, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x54,
	0x79, 0x70, 0x65, 0x22, 0x5e, 0x0a, 0x12, 0x4c, 0x69, 0x73, 0x74, 0x55, 0x61, 0x76, 0x4e, 0x65,
	0x74, 0x77, 0x6f, 0x72, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74,
	0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12,
	0x32, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e,
	0x75, 0x61, 0x76, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x74, 0x55,
	0x61, 0x76, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x6c,
	0x69, 0x73, 0x74, 0x22, 0x61, 0x0a, 0x13, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x55, 0x61, 0x76,
	0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x4e, 0x61,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x12,
	0x0a, 0x04, 0x42, 0x61, 0x6e, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x42, 0x61,
	0x6e, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x54, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x04, 0x54, 0x79, 0x70, 0x65, 0x22, 0x44, 0x0a, 0x14, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x55, 0x61, 0x76, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x12, 0x12,
	0x0a, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x43, 0x6f,
	0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x3b, 0x0a, 0x15,
	0x55, 0x61, 0x76, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x46, 0x69, 0x6e, 0x64, 0x42, 0x79,
	0x49, 0x64, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x02, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x27, 0x0a, 0x13, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x55, 0x61, 0x76, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x52, 0x65, 0x71,
	0x12, 0x10, 0x0a, 0x03, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x03, 0x52, 0x03, 0x69,
	0x64, 0x73, 0x22, 0x2a, 0x0a, 0x14, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x55, 0x61, 0x76, 0x4e,
	0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x43, 0x6f,
	0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x22, 0xbd,
	0x01, 0x0a, 0x0f, 0x41, 0x64, 0x64, 0x55, 0x61, 0x76, 0x50, 0x65, 0x6f, 0x70, 0x6c, 0x65, 0x52,
	0x65, 0x71, 0x12, 0x14, 0x0a, 0x05, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x05, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x1a, 0x0a, 0x08, 0x55, 0x73, 0x65, 0x72,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x55, 0x73, 0x65, 0x72,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x49, 0x63, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x49, 0x63, 0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x47, 0x65, 0x6e, 0x64, 0x65, 0x72,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x47, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x12, 0x1e,
	0x0a, 0x0a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x40,
	0x0a, 0x10, 0x41, 0x64, 0x64, 0x55, 0x61, 0x76, 0x50, 0x65, 0x6f, 0x70, 0x6c, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x22, 0x26, 0x0a, 0x10, 0x55, 0x61, 0x76, 0x50, 0x65, 0x6f, 0x70, 0x6c, 0x65, 0x41, 0x64, 0x64,
	0x52, 0x65, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x6f, 0x6e, 0x67, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x70, 0x6f, 0x6e, 0x67, 0x22, 0x5e, 0x0a, 0x10, 0x4c, 0x69, 0x73, 0x74,
	0x55, 0x61, 0x76, 0x50, 0x65, 0x6f, 0x70, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x12, 0x18, 0x0a, 0x07,
	0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x43,
	0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x50, 0x61, 0x67, 0x65, 0x53, 0x69,
	0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x50, 0x61, 0x67, 0x65, 0x53, 0x69,
	0x7a, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x55, 0x61, 0x76, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x05, 0x55, 0x61, 0x76, 0x49, 0x64, 0x22, 0xd0, 0x01, 0x0a, 0x12, 0x4c, 0x69, 0x73,
	0x74, 0x74, 0x55, 0x61, 0x76, 0x50, 0x65, 0x6f, 0x70, 0x6c, 0x65, 0x44, 0x61, 0x74, 0x61, 0x12,
	0x0e, 0x0a, 0x02, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x49, 0x64, 0x12,
	0x14, 0x0a, 0x05, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05,
	0x4c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x1a, 0x0a, 0x08, 0x55, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x55, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x14, 0x0a, 0x05, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12,
	0x12, 0x0a, 0x04, 0x49, 0x63, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x49,
	0x63, 0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x47, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x06, 0x47, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x12, 0x1e, 0x0a, 0x0a, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x5c, 0x0a, 0x11, 0x4c,
	0x69, 0x73, 0x74, 0x55, 0x61, 0x76, 0x50, 0x65, 0x6f, 0x70, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x31, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x75, 0x61, 0x76, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x2e, 0x4c, 0x69, 0x73, 0x74, 0x74, 0x55, 0x61, 0x76, 0x50, 0x65, 0x6f, 0x70, 0x6c, 0x65, 0x44,
	0x61, 0x74, 0x61, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x22, 0xd0, 0x01, 0x0a, 0x12, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x55, 0x61, 0x76, 0x50, 0x65, 0x6f, 0x70, 0x6c, 0x65, 0x52, 0x65, 0x71,
	0x12, 0x0e, 0x0a, 0x02, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x49, 0x64,
	0x12, 0x14, 0x0a, 0x05, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x05, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x1a, 0x0a, 0x08, 0x55, 0x73, 0x65, 0x72, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x55, 0x73, 0x65, 0x72, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x12, 0x12, 0x0a, 0x04, 0x49, 0x63, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x49, 0x63, 0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x47, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x47, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x12, 0x1e, 0x0a, 0x0a,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x43, 0x0a, 0x13,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x55, 0x61, 0x76, 0x50, 0x65, 0x6f, 0x70, 0x6c, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x22, 0x3a, 0x0a, 0x14, 0x55, 0x61, 0x76, 0x50, 0x65, 0x6f, 0x70, 0x6c, 0x65, 0x46, 0x69,
	0x6e, 0x64, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x4e, 0x61, 0x6d,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x26, 0x0a,
	0x12, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x55, 0x61, 0x76, 0x50, 0x65, 0x6f, 0x70, 0x6c, 0x65,
	0x52, 0x65, 0x71, 0x12, 0x10, 0x0a, 0x03, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x03,
	0x52, 0x03, 0x69, 0x64, 0x73, 0x22, 0x29, 0x0a, 0x13, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x55,
	0x61, 0x76, 0x50, 0x65, 0x6f, 0x70, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04,
	0x43, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x43, 0x6f, 0x64, 0x65,
	0x22, 0x71, 0x0a, 0x0d, 0x41, 0x64, 0x64, 0x55, 0x61, 0x76, 0x50, 0x6c, 0x61, 0x6e, 0x52, 0x65,
	0x71, 0x12, 0x15, 0x0a, 0x06, 0x55, 0x61, 0x76, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x05, 0x55, 0x61, 0x76, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x50, 0x6c, 0x61, 0x6e,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x50, 0x6c, 0x61, 0x6e, 0x12, 0x15, 0x0a, 0x06,
	0x46, 0x6c, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x46, 0x6c,
	0x79, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54,
	0x69, 0x6d, 0x65, 0x22, 0x3e, 0x0a, 0x0e, 0x41, 0x64, 0x64, 0x55, 0x61, 0x76, 0x50, 0x6c, 0x61,
	0x6e, 0x52, 0x65, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x22, 0x24, 0x0a, 0x0e, 0x55, 0x61, 0x76, 0x50, 0x6c, 0x61, 0x6e, 0x41, 0x64,
	0x64, 0x52, 0x65, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x6f, 0x6e, 0x67, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x6f, 0x6e, 0x67, 0x22, 0x5c, 0x0a, 0x0e, 0x4c, 0x69, 0x73,
	0x74, 0x55, 0x61, 0x76, 0x50, 0x6c, 0x61, 0x6e, 0x52, 0x65, 0x71, 0x12, 0x18, 0x0a, 0x07, 0x43,
	0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x43, 0x75,
	0x72, 0x72, 0x65, 0x6e, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x50, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x50, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a,
	0x65, 0x12, 0x14, 0x0a, 0x05, 0x55, 0x61, 0x76, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x05, 0x55, 0x61, 0x76, 0x49, 0x64, 0x22, 0x84, 0x01, 0x0a, 0x10, 0x4c, 0x69, 0x73, 0x74,
	0x74, 0x55, 0x61, 0x76, 0x50, 0x6c, 0x61, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x12, 0x0e, 0x0a, 0x02,
	0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x49, 0x64, 0x12, 0x15, 0x0a, 0x06,
	0x55, 0x61, 0x76, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x55, 0x61,
	0x76, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x50, 0x6c, 0x61, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x50, 0x6c, 0x61, 0x6e, 0x12, 0x15, 0x0a, 0x06, 0x46, 0x6c, 0x79, 0x5f, 0x69,
	0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x46, 0x6c, 0x79, 0x49, 0x64, 0x12, 0x1e,
	0x0a, 0x0a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x58,
	0x0a, 0x0f, 0x4c, 0x69, 0x73, 0x74, 0x55, 0x61, 0x76, 0x50, 0x6c, 0x61, 0x6e, 0x52, 0x65, 0x73,
	0x70, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x2f, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x75, 0x61, 0x76, 0x63, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x74, 0x55, 0x61, 0x76, 0x50, 0x6c, 0x61, 0x6e, 0x44, 0x61,
	0x74, 0x61, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x22, 0x84, 0x01, 0x0a, 0x10, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x55, 0x61, 0x76, 0x50, 0x6c, 0x61, 0x6e, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a,
	0x02, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x49, 0x64, 0x12, 0x15, 0x0a,
	0x06, 0x55, 0x61, 0x76, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x55,
	0x61, 0x76, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x50, 0x6c, 0x61, 0x6e, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x50, 0x6c, 0x61, 0x6e, 0x12, 0x15, 0x0a, 0x06, 0x46, 0x6c, 0x79, 0x5f,
	0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x46, 0x6c, 0x79, 0x49, 0x64, 0x12,
	0x1e, 0x0a, 0x0a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x22,
	0x41, 0x0a, 0x11, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x55, 0x61, 0x76, 0x50, 0x6c, 0x61, 0x6e,
	0x52, 0x65, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x22, 0x38, 0x0a, 0x12, 0x55, 0x61, 0x76, 0x50, 0x6c, 0x61, 0x6e, 0x46, 0x69, 0x6e,
	0x64, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x24, 0x0a, 0x10,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x55, 0x61, 0x76, 0x50, 0x6c, 0x61, 0x6e, 0x52, 0x65, 0x71,
	0x12, 0x10, 0x0a, 0x03, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x03, 0x52, 0x03, 0x69,
	0x64, 0x73, 0x22, 0x27, 0x0a, 0x11, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x55, 0x61, 0x76, 0x50,
	0x6c, 0x61, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x22, 0xb2, 0x02, 0x0a, 0x0c,
	0x55, 0x61, 0x76, 0x4d, 0x4d, 0x51, 0x41, 0x64, 0x64, 0x52, 0x65, 0x71, 0x12, 0x12, 0x0a, 0x04,
	0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x14, 0x0a, 0x05, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x54, 0x79, 0x70, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x54, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x43, 0x6f,
	0x64, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x14,
	0x0a, 0x05, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x4c,
	0x65, 0x76, 0x65, 0x6c, 0x12, 0x14, 0x0a, 0x05, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x05, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x50, 0x6c,
	0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x50, 0x6c,
	0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x12, 0x1c, 0x0a, 0x09, 0x53, 0x74, 0x61, 0x72, 0x74, 0x74,
	0x69, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x53, 0x74, 0x61, 0x72, 0x74,
	0x74, 0x69, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x45, 0x6e, 0x64, 0x74, 0x69, 0x6d, 0x65, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x45, 0x6e, 0x64, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x12,
	0x0a, 0x04, 0x4e, 0x6f, 0x74, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x4e, 0x6f,
	0x74, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x18, 0x0b, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x07, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x12, 0x10, 0x0a, 0x03,
	0x4c, 0x61, 0x6e, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x01, 0x52, 0x03, 0x4c, 0x61, 0x6e, 0x12, 0x10,
	0x0a, 0x03, 0x4c, 0x6f, 0x6e, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x01, 0x52, 0x03, 0x4c, 0x6f, 0x6e,
	0x22, 0x23, 0x0a, 0x0d, 0x55, 0x61, 0x76, 0x4d, 0x4d, 0x51, 0x41, 0x64, 0x64, 0x52, 0x65, 0x73,
	0x70, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x6f, 0x6e, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x70, 0x6f, 0x6e, 0x67, 0x22, 0x45, 0x0a, 0x0d, 0x55, 0x61, 0x76, 0x4d, 0x4d, 0x51, 0x4c,
	0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e,
	0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74,
	0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x22, 0xc4, 0x02, 0x0a,
	0x0e, 0x55, 0x61, 0x76, 0x4d, 0x4d, 0x51, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x12,
	0x0e, 0x0a, 0x02, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x49, 0x64, 0x12,
	0x12, 0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x54, 0x79, 0x70,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x54, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a,
	0x04, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x43, 0x6f, 0x64,
	0x65, 0x12, 0x14, 0x0a, 0x05, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x05, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x14, 0x0a, 0x05, 0x43, 0x6f, 0x75, 0x6e, 0x74,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1a, 0x0a,
	0x08, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x08, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x12, 0x1c, 0x0a, 0x09, 0x53, 0x74, 0x61,
	0x72, 0x74, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x53, 0x74,
	0x61, 0x72, 0x74, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x45, 0x6e, 0x64, 0x74, 0x69,
	0x6d, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x45, 0x6e, 0x64, 0x74, 0x69, 0x6d,
	0x65, 0x12, 0x12, 0x0a, 0x04, 0x4e, 0x6f, 0x74, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x4e, 0x6f, 0x74, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d,
	0x18, 0x0c, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x12,
	0x10, 0x0a, 0x03, 0x4c, 0x61, 0x6e, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x01, 0x52, 0x03, 0x4c, 0x61,
	0x6e, 0x12, 0x10, 0x0a, 0x03, 0x4c, 0x6f, 0x6e, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x01, 0x52, 0x03,
	0x4c, 0x6f, 0x6e, 0x22, 0x55, 0x0a, 0x0e, 0x55, 0x61, 0x76, 0x4d, 0x4d, 0x51, 0x4c, 0x69, 0x73,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x2d, 0x0a, 0x04, 0x44,
	0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x75, 0x61, 0x76, 0x63,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x55, 0x61, 0x76, 0x4d, 0x4d, 0x51, 0x4c, 0x69, 0x73, 0x74,
	0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x44, 0x61, 0x74, 0x61, 0x22, 0x2f, 0x0a, 0x11, 0x55, 0x61,
	0x76, 0x4d, 0x4d, 0x51, 0x46, 0x69, 0x6e, 0x64, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x71, 0x12,
	0x1a, 0x0a, 0x08, 0x55, 0x61, 0x76, 0x4d, 0x4d, 0x51, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x08, 0x55, 0x61, 0x76, 0x4d, 0x4d, 0x51, 0x49, 0x64, 0x22, 0x9a, 0x01, 0x0a, 0x12,
	0x55, 0x61, 0x76, 0x4d, 0x4d, 0x51, 0x46, 0x69, 0x6e, 0x64, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65,
	0x73, 0x70, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02,
	0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x70, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x02, 0x49, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x50, 0x6f, 0x72, 0x74, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x50, 0x6f, 0x72, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x48, 0x61,
	0x6e, 0x67, 0x61, 0x72, 0x5f, 0x69, 0x70, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x48,
	0x61, 0x6e, 0x67, 0x61, 0x72, 0x49, 0x70, 0x12, 0x1f, 0x0a, 0x0b, 0x48, 0x61, 0x6e, 0x67, 0x61,
	0x72, 0x5f, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x48, 0x61,
	0x6e, 0x67, 0x61, 0x72, 0x50, 0x6f, 0x72, 0x74, 0x22, 0x32, 0x0a, 0x12, 0x55, 0x61, 0x76, 0x4d,
	0x4d, 0x51, 0x46, 0x69, 0x6e, 0x64, 0x42, 0x79, 0x49, 0x64, 0x73, 0x52, 0x65, 0x71, 0x12, 0x1c,
	0x0a, 0x09, 0x55, 0x61, 0x76, 0x4d, 0x4d, 0x51, 0x49, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x03, 0x52, 0x09, 0x55, 0x61, 0x76, 0x4d, 0x4d, 0x51, 0x49, 0x64, 0x73, 0x22, 0x5a, 0x0a, 0x13,
	0x55, 0x61, 0x76, 0x4d, 0x4d, 0x51, 0x46, 0x69, 0x6e, 0x64, 0x42, 0x79, 0x49, 0x64, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x2d, 0x0a, 0x04, 0x6c, 0x69, 0x73,
	0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x75, 0x61, 0x76, 0x63, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x2e, 0x55, 0x61, 0x76, 0x4d, 0x4d, 0x51, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x61,
	0x74, 0x61, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x32, 0xa6, 0x03, 0x0a, 0x10, 0x55, 0x61, 0x76,
	0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x47, 0x0a,
	0x0c, 0x55, 0x61, 0x76, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x41, 0x64, 0x64, 0x12, 0x1a, 0x2e,
	0x75, 0x61, 0x76, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x55, 0x61, 0x76, 0x44, 0x65, 0x76,
	0x69, 0x63, 0x65, 0x41, 0x64, 0x64, 0x52, 0x65, 0x71, 0x1a, 0x1b, 0x2e, 0x75, 0x61, 0x76, 0x63,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x55, 0x61, 0x76, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x41,
	0x64, 0x64, 0x52, 0x65, 0x73, 0x70, 0x12, 0x4a, 0x0a, 0x0d, 0x55, 0x61, 0x76, 0x44, 0x65, 0x76,
	0x69, 0x63, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x1b, 0x2e, 0x75, 0x61, 0x76, 0x63, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x2e, 0x55, 0x61, 0x76, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x4c, 0x69, 0x73,
	0x74, 0x52, 0x65, 0x71, 0x1a, 0x1c, 0x2e, 0x75, 0x61, 0x76, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x2e, 0x55, 0x61, 0x76, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x12, 0x4a, 0x0a, 0x0f, 0x55, 0x61, 0x76, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x1a, 0x2e, 0x75, 0x61, 0x76, 0x63, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x2e, 0x55, 0x61, 0x76, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x41, 0x64, 0x64, 0x52, 0x65,
	0x71, 0x1a, 0x1b, 0x2e, 0x75, 0x61, 0x76, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x55, 0x61,
	0x76, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x41, 0x64, 0x64, 0x52, 0x65, 0x73, 0x70, 0x12, 0x56,
	0x0a, 0x11, 0x55, 0x61, 0x76, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x46, 0x69, 0x6e, 0x64, 0x42,
	0x79, 0x49, 0x64, 0x12, 0x1f, 0x2e, 0x75, 0x61, 0x76, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e,
	0x55, 0x61, 0x76, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x46, 0x69, 0x6e, 0x64, 0x42, 0x79, 0x49,
	0x64, 0x52, 0x65, 0x71, 0x1a, 0x20, 0x2e, 0x75, 0x61, 0x76, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x2e, 0x55, 0x61, 0x76, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x46, 0x69, 0x6e, 0x64, 0x42, 0x79,
	0x49, 0x64, 0x52, 0x65, 0x73, 0x70, 0x12, 0x59, 0x0a, 0x12, 0x55, 0x61, 0x76, 0x44, 0x65, 0x76,
	0x69, 0x63, 0x65, 0x46, 0x69, 0x6e, 0x64, 0x42, 0x79, 0x49, 0x64, 0x73, 0x12, 0x20, 0x2e, 0x75,
	0x61, 0x76, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x55, 0x61, 0x76, 0x44, 0x65, 0x76, 0x69,
	0x63, 0x65, 0x46, 0x69, 0x6e, 0x64, 0x42, 0x79, 0x49, 0x64, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x21,
	0x2e, 0x75, 0x61, 0x76, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x55, 0x61, 0x76, 0x44, 0x65,
	0x76, 0x69, 0x63, 0x65, 0x46, 0x69, 0x6e, 0x64, 0x42, 0x79, 0x49, 0x64, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x32, 0xa6, 0x02, 0x0a, 0x0d, 0x55, 0x61, 0x76, 0x46, 0x6c, 0x79, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x12, 0x3e, 0x0a, 0x09, 0x55, 0x61, 0x76, 0x46, 0x6c, 0x79, 0x41, 0x64, 0x64,
	0x12, 0x17, 0x2e, 0x75, 0x61, 0x76, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x41, 0x64, 0x64,
	0x55, 0x61, 0x76, 0x46, 0x6c, 0x79, 0x52, 0x65, 0x71, 0x1a, 0x18, 0x2e, 0x75, 0x61, 0x76, 0x63,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x55, 0x61, 0x76, 0x46, 0x6c, 0x79, 0x41, 0x64, 0x64, 0x52,
	0x65, 0x73, 0x70, 0x12, 0x41, 0x0a, 0x0a, 0x55, 0x61, 0x76, 0x46, 0x6c, 0x79, 0x4c, 0x69, 0x73,
	0x74, 0x12, 0x18, 0x2e, 0x75, 0x61, 0x76, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x4c, 0x69,
	0x73, 0x74, 0x55, 0x61, 0x76, 0x46, 0x6c, 0x79, 0x52, 0x65, 0x71, 0x1a, 0x19, 0x2e, 0x75, 0x61,
	0x76, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x55, 0x61, 0x76, 0x46,
	0x6c, 0x79, 0x52, 0x65, 0x73, 0x70, 0x12, 0x47, 0x0a, 0x0c, 0x55, 0x61, 0x76, 0x46, 0x6c, 0x79,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x1a, 0x2e, 0x75, 0x61, 0x76, 0x63, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x55, 0x61, 0x76, 0x46, 0x6c, 0x79, 0x52,
	0x65, 0x71, 0x1a, 0x1b, 0x2e, 0x75, 0x61, 0x76, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x55, 0x61, 0x76, 0x46, 0x6c, 0x79, 0x52, 0x65, 0x73, 0x70, 0x12,
	0x49, 0x0a, 0x0e, 0x55, 0x61, 0x76, 0x46, 0x6c, 0x79, 0x46, 0x69, 0x6e, 0x64, 0x42, 0x79, 0x49,
	0x64, 0x12, 0x1c, 0x2e, 0x75, 0x61, 0x76, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x55, 0x61,
	0x76, 0x46, 0x6c, 0x79, 0x46, 0x69, 0x6e, 0x64, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x71, 0x1a,
	0x19, 0x2e, 0x75, 0x61, 0x76, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x4c, 0x69, 0x73, 0x74,
	0x55, 0x61, 0x76, 0x46, 0x6c, 0x79, 0x52, 0x65, 0x73, 0x70, 0x32, 0xda, 0x02, 0x0a, 0x11, 0x55,
	0x61, 0x76, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x12, 0x4a, 0x0a, 0x0d, 0x55, 0x61, 0x76, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x41, 0x64,
	0x64, 0x12, 0x1b, 0x2e, 0x75, 0x61, 0x76, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x41, 0x64,
	0x64, 0x55, 0x61, 0x76, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x71, 0x1a, 0x1c,
	0x2e, 0x75, 0x61, 0x76, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x55, 0x61, 0x76, 0x48, 0x69,
	0x73, 0x74, 0x6f, 0x72, 0x79, 0x41, 0x64, 0x64, 0x52, 0x65, 0x73, 0x70, 0x12, 0x4d, 0x0a, 0x0e,
	0x55, 0x61, 0x76, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x1c,
	0x2e, 0x75, 0x61, 0x76, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x55,
	0x61, 0x76, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x71, 0x1a, 0x1d, 0x2e, 0x75,
	0x61, 0x76, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x55, 0x61, 0x76,
	0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x12, 0x53, 0x0a, 0x10, 0x55,
	0x61, 0x76, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12,
	0x1e, 0x2e, 0x75, 0x61, 0x76, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x55, 0x61, 0x76, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x71, 0x1a,
	0x1f, 0x2e, 0x75, 0x61, 0x76, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x55, 0x61, 0x76, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70,
	0x12, 0x55, 0x0a, 0x12, 0x55, 0x61, 0x76, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x46, 0x69,
	0x6e, 0x64, 0x42, 0x79, 0x49, 0x64, 0x12, 0x20, 0x2e, 0x75, 0x61, 0x76, 0x63, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x2e, 0x55, 0x61, 0x76, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x46, 0x69, 0x6e,
	0x64, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x71, 0x1a, 0x1d, 0x2e, 0x75, 0x61, 0x76, 0x63, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x55, 0x61, 0x76, 0x48, 0x69, 0x73, 0x74,
	0x6f, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x32, 0xda, 0x02, 0x0a, 0x11, 0x55, 0x61, 0x76, 0x4e,
	0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x4a, 0x0a,
	0x0d, 0x55, 0x61, 0x76, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x41, 0x64, 0x64, 0x12, 0x1b,
	0x2e, 0x75, 0x61, 0x76, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x41, 0x64, 0x64, 0x55, 0x61,
	0x76, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x52, 0x65, 0x71, 0x1a, 0x1c, 0x2e, 0x75, 0x61,
	0x76, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x55, 0x61, 0x76, 0x4e, 0x65, 0x74, 0x77, 0x6f,
	0x72, 0x6b, 0x41, 0x64, 0x64, 0x52, 0x65, 0x73, 0x70, 0x12, 0x4d, 0x0a, 0x0e, 0x55, 0x61, 0x76,
	0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x1c, 0x2e, 0x75, 0x61,
	0x76, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x55, 0x61, 0x76, 0x4e,
	0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x52, 0x65, 0x71, 0x1a, 0x1d, 0x2e, 0x75, 0x61, 0x76, 0x63,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x55, 0x61, 0x76, 0x4e, 0x65, 0x74,
	0x77, 0x6f, 0x72, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x12, 0x53, 0x0a, 0x10, 0x55, 0x61, 0x76, 0x4e,
	0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x1e, 0x2e, 0x75,
	0x61, 0x76, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x55,
	0x61, 0x76, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x52, 0x65, 0x71, 0x1a, 0x1f, 0x2e, 0x75,
	0x61, 0x76, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x55,
	0x61, 0x76, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x12, 0x55, 0x0a,
	0x12, 0x55, 0x61, 0x76, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x46, 0x69, 0x6e, 0x64, 0x42,
	0x79, 0x49, 0x64, 0x12, 0x20, 0x2e, 0x75, 0x61, 0x76, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e,
	0x55, 0x61, 0x76, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x46, 0x69, 0x6e, 0x64, 0x42, 0x79,
	0x49, 0x64, 0x52, 0x65, 0x71, 0x1a, 0x1d, 0x2e, 0x75, 0x61, 0x76, 0x63, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x55, 0x61, 0x76, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b,
	0x52, 0x65, 0x73, 0x70, 0x32, 0xcd, 0x02, 0x0a, 0x10, 0x55, 0x61, 0x76, 0x50, 0x65, 0x6f, 0x70,
	0x6c, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x47, 0x0a, 0x0c, 0x55, 0x61, 0x76,
	0x50, 0x65, 0x6f, 0x70, 0x6c, 0x65, 0x41, 0x64, 0x64, 0x12, 0x1a, 0x2e, 0x75, 0x61, 0x76, 0x63,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x41, 0x64, 0x64, 0x55, 0x61, 0x76, 0x50, 0x65, 0x6f, 0x70,
	0x6c, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x1b, 0x2e, 0x75, 0x61, 0x76, 0x63, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x2e, 0x55, 0x61, 0x76, 0x50, 0x65, 0x6f, 0x70, 0x6c, 0x65, 0x41, 0x64, 0x64, 0x52, 0x65,
	0x73, 0x70, 0x12, 0x4a, 0x0a, 0x0d, 0x55, 0x61, 0x76, 0x50, 0x65, 0x6f, 0x70, 0x6c, 0x65, 0x4c,
	0x69, 0x73, 0x74, 0x12, 0x1b, 0x2e, 0x75, 0x61, 0x76, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e,
	0x4c, 0x69, 0x73, 0x74, 0x55, 0x61, 0x76, 0x50, 0x65, 0x6f, 0x70, 0x6c, 0x65, 0x52, 0x65, 0x71,
	0x1a, 0x1c, 0x2e, 0x75, 0x61, 0x76, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x4c, 0x69, 0x73,
	0x74, 0x55, 0x61, 0x76, 0x50, 0x65, 0x6f, 0x70, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x50,
	0x0a, 0x0f, 0x55, 0x61, 0x76, 0x50, 0x65, 0x6f, 0x70, 0x6c, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x12, 0x1d, 0x2e, 0x75, 0x61, 0x76, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x55, 0x61, 0x76, 0x50, 0x65, 0x6f, 0x70, 0x6c, 0x65, 0x52, 0x65, 0x71,
	0x1a, 0x1e, 0x2e, 0x75, 0x61, 0x76, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x55, 0x61, 0x76, 0x50, 0x65, 0x6f, 0x70, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x12, 0x52, 0x0a, 0x11, 0x55, 0x61, 0x76, 0x50, 0x65, 0x6f, 0x70, 0x6c, 0x65, 0x46, 0x69, 0x6e,
	0x64, 0x42, 0x79, 0x49, 0x64, 0x12, 0x1f, 0x2e, 0x75, 0x61, 0x76, 0x63, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x2e, 0x55, 0x61, 0x76, 0x50, 0x65, 0x6f, 0x70, 0x6c, 0x65, 0x46, 0x69, 0x6e, 0x64, 0x42,
	0x79, 0x49, 0x64, 0x52, 0x65, 0x71, 0x1a, 0x1c, 0x2e, 0x75, 0x61, 0x76, 0x63, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x55, 0x61, 0x76, 0x50, 0x65, 0x6f, 0x70, 0x6c, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x32, 0xb3, 0x02, 0x0a, 0x0e, 0x55, 0x61, 0x76, 0x50, 0x6c, 0x61, 0x6e,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x41, 0x0a, 0x0a, 0x55, 0x61, 0x76, 0x50, 0x6c,
	0x61, 0x6e, 0x41, 0x64, 0x64, 0x12, 0x18, 0x2e, 0x75, 0x61, 0x76, 0x63, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x2e, 0x41, 0x64, 0x64, 0x55, 0x61, 0x76, 0x50, 0x6c, 0x61, 0x6e, 0x52, 0x65, 0x71, 0x1a,
	0x19, 0x2e, 0x75, 0x61, 0x76, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x55, 0x61, 0x76, 0x50,
	0x6c, 0x61, 0x6e, 0x41, 0x64, 0x64, 0x52, 0x65, 0x73, 0x70, 0x12, 0x44, 0x0a, 0x0b, 0x55, 0x61,
	0x76, 0x50, 0x6c, 0x61, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x19, 0x2e, 0x75, 0x61, 0x76, 0x63,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x55, 0x61, 0x76, 0x50, 0x6c, 0x61,
	0x6e, 0x52, 0x65, 0x71, 0x1a, 0x1a, 0x2e, 0x75, 0x61, 0x76, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x2e, 0x4c, 0x69, 0x73, 0x74, 0x55, 0x61, 0x76, 0x50, 0x6c, 0x61, 0x6e, 0x52, 0x65, 0x73, 0x70,
	0x12, 0x4a, 0x0a, 0x0d, 0x55, 0x61, 0x76, 0x50, 0x6c, 0x61, 0x6e, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x12, 0x1b, 0x2e, 0x75, 0x61, 0x76, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x55, 0x61, 0x76, 0x50, 0x6c, 0x61, 0x6e, 0x52, 0x65, 0x71, 0x1a, 0x1c,
	0x2e, 0x75, 0x61, 0x76, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x55, 0x61, 0x76, 0x50, 0x6c, 0x61, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x12, 0x4c, 0x0a, 0x0f,
	0x55, 0x61, 0x76, 0x50, 0x6c, 0x61, 0x6e, 0x46, 0x69, 0x6e, 0x64, 0x42, 0x79, 0x49, 0x64, 0x12,
	0x1d, 0x2e, 0x75, 0x61, 0x76, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x55, 0x61, 0x76, 0x50,
	0x6c, 0x61, 0x6e, 0x46, 0x69, 0x6e, 0x64, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x71, 0x1a, 0x1a,
	0x2e, 0x75, 0x61, 0x76, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x55,
	0x61, 0x76, 0x50, 0x6c, 0x61, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x32, 0xf6, 0x01, 0x0a, 0x0d, 0x55,
	0x61, 0x76, 0x4d, 0x4d, 0x51, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x41, 0x0a, 0x0a,
	0x55, 0x61, 0x76, 0x4d, 0x4d, 0x51, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x18, 0x2e, 0x75, 0x61, 0x76,
	0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x55, 0x61, 0x76, 0x4d, 0x4d, 0x51, 0x4c, 0x69, 0x73,
	0x74, 0x52, 0x65, 0x71, 0x1a, 0x19, 0x2e, 0x75, 0x61, 0x76, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x2e, 0x55, 0x61, 0x76, 0x4d, 0x4d, 0x51, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12,
	0x50, 0x0a, 0x11, 0x55, 0x61, 0x76, 0x4d, 0x4d, 0x51, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d,
	0x42, 0x79, 0x49, 0x64, 0x12, 0x1c, 0x2e, 0x75, 0x61, 0x76, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x2e, 0x55, 0x61, 0x76, 0x4d, 0x4d, 0x51, 0x46, 0x69, 0x6e, 0x64, 0x42, 0x79, 0x49, 0x64, 0x52,
	0x65, 0x71, 0x1a, 0x1d, 0x2e, 0x75, 0x61, 0x76, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x55,
	0x61, 0x76, 0x4d, 0x4d, 0x51, 0x46, 0x69, 0x6e, 0x64, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x73,
	0x70, 0x12, 0x50, 0x0a, 0x0f, 0x55, 0x61, 0x76, 0x4d, 0x4d, 0x51, 0x46, 0x69, 0x6e, 0x64, 0x42,
	0x79, 0x49, 0x64, 0x73, 0x12, 0x1d, 0x2e, 0x75, 0x61, 0x76, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x2e, 0x55, 0x61, 0x76, 0x4d, 0x4d, 0x51, 0x46, 0x69, 0x6e, 0x64, 0x42, 0x79, 0x49, 0x64, 0x73,
	0x52, 0x65, 0x71, 0x1a, 0x1e, 0x2e, 0x75, 0x61, 0x76, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e,
	0x55, 0x61, 0x76, 0x4d, 0x4d, 0x51, 0x46, 0x69, 0x6e, 0x64, 0x42, 0x79, 0x49, 0x64, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x42, 0x0c, 0x5a, 0x0a, 0x2e, 0x2f, 0x75, 0x61, 0x76, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_uav_proto_rawDescOnce sync.Once
	file_uav_proto_rawDescData = file_uav_proto_rawDesc
)

func file_uav_proto_rawDescGZIP() []byte {
	file_uav_proto_rawDescOnce.Do(func() {
		file_uav_proto_rawDescData = protoimpl.X.CompressGZIP(file_uav_proto_rawDescData)
	})
	return file_uav_proto_rawDescData
}

var file_uav_proto_msgTypes = make([]protoimpl.MessageInfo, 76)
var file_uav_proto_goTypes = []interface{}{
	(*UavDeviceAddReq)(nil),        // 0: uavclient.UavDeviceAddReq
	(*UavDeviceAddResp)(nil),       // 1: uavclient.UavDeviceAddResp
	(*UavDeviceListReq)(nil),       // 2: uavclient.UavDeviceListReq
	(*UavDeviceListData)(nil),      // 3: uavclient.UavDeviceListData
	(*UavControlData)(nil),         // 4: uavclient.UavControlData
	(*UavDeviceListResp)(nil),      // 5: uavclient.UavDeviceListResp
	(*UavDeviceFindByIdReq)(nil),   // 6: uavclient.UavDeviceFindByIdReq
	(*UavDeviceFindByIdResp)(nil),  // 7: uavclient.UavDeviceFindByIdResp
	(*UavFlyData)(nil),             // 8: uavclient.UavFlyData
	(*UavAlertData)(nil),           // 9: uavclient.UavAlertData
	(*UavDeviceFindByIdsReq)(nil),  // 10: uavclient.UavDeviceFindByIdsReq
	(*UavDeviceFindByIdsResp)(nil), // 11: uavclient.UavDeviceFindByIdsResp
	(*AddUavFlyReq)(nil),           // 12: uavclient.AddUavFlyReq
	(*AddUavFlyResp)(nil),          // 13: uavclient.AddUavFlyResp
	(*UavFlyAddResp)(nil),          // 14: uavclient.UavFlyAddResp
	(*ListUavFlyReq)(nil),          // 15: uavclient.ListUavFlyReq
	(*ListtUavFlyData)(nil),        // 16: uavclient.ListtUavFlyData
	(*ListUavFlyResp)(nil),         // 17: uavclient.ListUavFlyResp
	(*UpdateUavFlyReq)(nil),        // 18: uavclient.UpdateUavFlyReq
	(*UpdateUavFlyResp)(nil),       // 19: uavclient.UpdateUavFlyResp
	(*UavFlyFindByIdReq)(nil),      // 20: uavclient.UavFlyFindByIdReq
	(*DeleteUavFlyReq)(nil),        // 21: uavclient.DeleteUavFlyReq
	(*DeleteUavFlyResp)(nil),       // 22: uavclient.DeleteUavFlyResp
	(*AddUavHistoryReq)(nil),       // 23: uavclient.AddUavHistoryReq
	(*AddUavHistoryResp)(nil),      // 24: uavclient.AddUavHistoryResp
	(*UavHistoryAddResp)(nil),      // 25: uavclient.UavHistoryAddResp
	(*ListUavHistoryReq)(nil),      // 26: uavclient.ListUavHistoryReq
	(*ListtUavHistoryData)(nil),    // 27: uavclient.ListtUavHistoryData
	(*ListUavHistoryResp)(nil),     // 28: uavclient.ListUavHistoryResp
	(*UpdateUavHistoryReq)(nil),    // 29: uavclient.UpdateUavHistoryReq
	(*UpdateUavHistoryResp)(nil),   // 30: uavclient.UpdateUavHistoryResp
	(*UavHistoryFindByIdReq)(nil),  // 31: uavclient.UavHistoryFindByIdReq
	(*DeleteUavHistoryReq)(nil),    // 32: uavclient.DeleteUavHistoryReq
	(*DeleteUavHistoryResp)(nil),   // 33: uavclient.DeleteUavHistoryResp
	(*AddUavNetworkReq)(nil),       // 34: uavclient.AddUavNetworkReq
	(*AddUavNetworkResp)(nil),      // 35: uavclient.AddUavNetworkResp
	(*UavNetworkAddResp)(nil),      // 36: uavclient.UavNetworkAddResp
	(*ListUavNetworkReq)(nil),      // 37: uavclient.ListUavNetworkReq
	(*ListtUavNetworkData)(nil),    // 38: uavclient.ListtUavNetworkData
	(*ListUavNetworkResp)(nil),     // 39: uavclient.ListUavNetworkResp
	(*UpdateUavNetworkReq)(nil),    // 40: uavclient.UpdateUavNetworkReq
	(*UpdateUavNetworkResp)(nil),   // 41: uavclient.UpdateUavNetworkResp
	(*UavNetworkFindByIdReq)(nil),  // 42: uavclient.UavNetworkFindByIdReq
	(*DeleteUavNetworkReq)(nil),    // 43: uavclient.DeleteUavNetworkReq
	(*DeleteUavNetworkResp)(nil),   // 44: uavclient.DeleteUavNetworkResp
	(*AddUavPeopleReq)(nil),        // 45: uavclient.AddUavPeopleReq
	(*AddUavPeopleResp)(nil),       // 46: uavclient.AddUavPeopleResp
	(*UavPeopleAddResp)(nil),       // 47: uavclient.UavPeopleAddResp
	(*ListUavPeopleReq)(nil),       // 48: uavclient.ListUavPeopleReq
	(*ListtUavPeopleData)(nil),     // 49: uavclient.ListtUavPeopleData
	(*ListUavPeopleResp)(nil),      // 50: uavclient.ListUavPeopleResp
	(*UpdateUavPeopleReq)(nil),     // 51: uavclient.UpdateUavPeopleReq
	(*UpdateUavPeopleResp)(nil),    // 52: uavclient.UpdateUavPeopleResp
	(*UavPeopleFindByIdReq)(nil),   // 53: uavclient.UavPeopleFindByIdReq
	(*DeleteUavPeopleReq)(nil),     // 54: uavclient.DeleteUavPeopleReq
	(*DeleteUavPeopleResp)(nil),    // 55: uavclient.DeleteUavPeopleResp
	(*AddUavPlanReq)(nil),          // 56: uavclient.AddUavPlanReq
	(*AddUavPlanResp)(nil),         // 57: uavclient.AddUavPlanResp
	(*UavPlanAddResp)(nil),         // 58: uavclient.UavPlanAddResp
	(*ListUavPlanReq)(nil),         // 59: uavclient.ListUavPlanReq
	(*ListtUavPlanData)(nil),       // 60: uavclient.ListtUavPlanData
	(*ListUavPlanResp)(nil),        // 61: uavclient.ListUavPlanResp
	(*UpdateUavPlanReq)(nil),       // 62: uavclient.UpdateUavPlanReq
	(*UpdateUavPlanResp)(nil),      // 63: uavclient.UpdateUavPlanResp
	(*UavPlanFindByIdReq)(nil),     // 64: uavclient.UavPlanFindByIdReq
	(*DeleteUavPlanReq)(nil),       // 65: uavclient.DeleteUavPlanReq
	(*DeleteUavPlanResp)(nil),      // 66: uavclient.DeleteUavPlanResp
	(*UavMMQAddReq)(nil),           // 67: uavclient.UavMMQAddReq
	(*UavMMQAddResp)(nil),          // 68: uavclient.UavMMQAddResp
	(*UavMMQListReq)(nil),          // 69: uavclient.UavMMQListReq
	(*UavMMQListData)(nil),         // 70: uavclient.UavMMQListData
	(*UavMMQListResp)(nil),         // 71: uavclient.UavMMQListResp
	(*UavMMQFindByIdReq)(nil),      // 72: uavclient.UavMMQFindByIdReq
	(*UavMMQFindByIdResp)(nil),     // 73: uavclient.UavMMQFindByIdResp
	(*UavMMQFindByIdsReq)(nil),     // 74: uavclient.UavMMQFindByIdsReq
	(*UavMMQFindByIdsResp)(nil),    // 75: uavclient.UavMMQFindByIdsResp
}
var file_uav_proto_depIdxs = []int32{
	3,  // 0: uavclient.UavDeviceListResp.Data:type_name -> uavclient.UavDeviceListData
	3,  // 1: uavclient.UavDeviceFindByIdsResp.list:type_name -> uavclient.UavDeviceListData
	16, // 2: uavclient.ListUavFlyResp.list:type_name -> uavclient.ListtUavFlyData
	27, // 3: uavclient.ListUavHistoryResp.list:type_name -> uavclient.ListtUavHistoryData
	38, // 4: uavclient.ListUavNetworkResp.list:type_name -> uavclient.ListtUavNetworkData
	49, // 5: uavclient.ListUavPeopleResp.list:type_name -> uavclient.ListtUavPeopleData
	60, // 6: uavclient.ListUavPlanResp.list:type_name -> uavclient.ListtUavPlanData
	70, // 7: uavclient.UavMMQListResp.Data:type_name -> uavclient.UavMMQListData
	70, // 8: uavclient.UavMMQFindByIdsResp.list:type_name -> uavclient.UavMMQListData
	0,  // 9: uavclient.UavDeviceService.UavDeviceAdd:input_type -> uavclient.UavDeviceAddReq
	2,  // 10: uavclient.UavDeviceService.UavDeviceList:input_type -> uavclient.UavDeviceListReq
	0,  // 11: uavclient.UavDeviceService.UavDeviceUpdate:input_type -> uavclient.UavDeviceAddReq
	6,  // 12: uavclient.UavDeviceService.UavDeviceFindById:input_type -> uavclient.UavDeviceFindByIdReq
	10, // 13: uavclient.UavDeviceService.UavDeviceFindByIds:input_type -> uavclient.UavDeviceFindByIdsReq
	12, // 14: uavclient.UavFlyService.UavFlyAdd:input_type -> uavclient.AddUavFlyReq
	15, // 15: uavclient.UavFlyService.UavFlyList:input_type -> uavclient.ListUavFlyReq
	18, // 16: uavclient.UavFlyService.UavFlyUpdate:input_type -> uavclient.UpdateUavFlyReq
	20, // 17: uavclient.UavFlyService.UavFlyFindById:input_type -> uavclient.UavFlyFindByIdReq
	23, // 18: uavclient.UavHistoryService.UavHistoryAdd:input_type -> uavclient.AddUavHistoryReq
	26, // 19: uavclient.UavHistoryService.UavHistoryList:input_type -> uavclient.ListUavHistoryReq
	29, // 20: uavclient.UavHistoryService.UavHistoryUpdate:input_type -> uavclient.UpdateUavHistoryReq
	31, // 21: uavclient.UavHistoryService.UavHistoryFindById:input_type -> uavclient.UavHistoryFindByIdReq
	34, // 22: uavclient.UavNetworkService.UavNetworkAdd:input_type -> uavclient.AddUavNetworkReq
	37, // 23: uavclient.UavNetworkService.UavNetworkList:input_type -> uavclient.ListUavNetworkReq
	40, // 24: uavclient.UavNetworkService.UavNetworkUpdate:input_type -> uavclient.UpdateUavNetworkReq
	42, // 25: uavclient.UavNetworkService.UavNetworkFindById:input_type -> uavclient.UavNetworkFindByIdReq
	45, // 26: uavclient.UavPeopleService.UavPeopleAdd:input_type -> uavclient.AddUavPeopleReq
	48, // 27: uavclient.UavPeopleService.UavPeopleList:input_type -> uavclient.ListUavPeopleReq
	51, // 28: uavclient.UavPeopleService.UavPeopleUpdate:input_type -> uavclient.UpdateUavPeopleReq
	53, // 29: uavclient.UavPeopleService.UavPeopleFindById:input_type -> uavclient.UavPeopleFindByIdReq
	56, // 30: uavclient.UavPlanService.UavPlanAdd:input_type -> uavclient.AddUavPlanReq
	59, // 31: uavclient.UavPlanService.UavPlanList:input_type -> uavclient.ListUavPlanReq
	62, // 32: uavclient.UavPlanService.UavPlanUpdate:input_type -> uavclient.UpdateUavPlanReq
	64, // 33: uavclient.UavPlanService.UavPlanFindById:input_type -> uavclient.UavPlanFindByIdReq
	69, // 34: uavclient.UavMMQService.UavMMQList:input_type -> uavclient.UavMMQListReq
	72, // 35: uavclient.UavMMQService.UavMMQConfirmById:input_type -> uavclient.UavMMQFindByIdReq
	74, // 36: uavclient.UavMMQService.UavMMQFindByIds:input_type -> uavclient.UavMMQFindByIdsReq
	1,  // 37: uavclient.UavDeviceService.UavDeviceAdd:output_type -> uavclient.UavDeviceAddResp
	5,  // 38: uavclient.UavDeviceService.UavDeviceList:output_type -> uavclient.UavDeviceListResp
	1,  // 39: uavclient.UavDeviceService.UavDeviceUpdate:output_type -> uavclient.UavDeviceAddResp
	7,  // 40: uavclient.UavDeviceService.UavDeviceFindById:output_type -> uavclient.UavDeviceFindByIdResp
	11, // 41: uavclient.UavDeviceService.UavDeviceFindByIds:output_type -> uavclient.UavDeviceFindByIdsResp
	14, // 42: uavclient.UavFlyService.UavFlyAdd:output_type -> uavclient.UavFlyAddResp
	17, // 43: uavclient.UavFlyService.UavFlyList:output_type -> uavclient.ListUavFlyResp
	19, // 44: uavclient.UavFlyService.UavFlyUpdate:output_type -> uavclient.UpdateUavFlyResp
	17, // 45: uavclient.UavFlyService.UavFlyFindById:output_type -> uavclient.ListUavFlyResp
	25, // 46: uavclient.UavHistoryService.UavHistoryAdd:output_type -> uavclient.UavHistoryAddResp
	28, // 47: uavclient.UavHistoryService.UavHistoryList:output_type -> uavclient.ListUavHistoryResp
	30, // 48: uavclient.UavHistoryService.UavHistoryUpdate:output_type -> uavclient.UpdateUavHistoryResp
	28, // 49: uavclient.UavHistoryService.UavHistoryFindById:output_type -> uavclient.ListUavHistoryResp
	36, // 50: uavclient.UavNetworkService.UavNetworkAdd:output_type -> uavclient.UavNetworkAddResp
	39, // 51: uavclient.UavNetworkService.UavNetworkList:output_type -> uavclient.ListUavNetworkResp
	41, // 52: uavclient.UavNetworkService.UavNetworkUpdate:output_type -> uavclient.UpdateUavNetworkResp
	39, // 53: uavclient.UavNetworkService.UavNetworkFindById:output_type -> uavclient.ListUavNetworkResp
	47, // 54: uavclient.UavPeopleService.UavPeopleAdd:output_type -> uavclient.UavPeopleAddResp
	50, // 55: uavclient.UavPeopleService.UavPeopleList:output_type -> uavclient.ListUavPeopleResp
	52, // 56: uavclient.UavPeopleService.UavPeopleUpdate:output_type -> uavclient.UpdateUavPeopleResp
	50, // 57: uavclient.UavPeopleService.UavPeopleFindById:output_type -> uavclient.ListUavPeopleResp
	58, // 58: uavclient.UavPlanService.UavPlanAdd:output_type -> uavclient.UavPlanAddResp
	61, // 59: uavclient.UavPlanService.UavPlanList:output_type -> uavclient.ListUavPlanResp
	63, // 60: uavclient.UavPlanService.UavPlanUpdate:output_type -> uavclient.UpdateUavPlanResp
	61, // 61: uavclient.UavPlanService.UavPlanFindById:output_type -> uavclient.ListUavPlanResp
	71, // 62: uavclient.UavMMQService.UavMMQList:output_type -> uavclient.UavMMQListResp
	73, // 63: uavclient.UavMMQService.UavMMQConfirmById:output_type -> uavclient.UavMMQFindByIdResp
	75, // 64: uavclient.UavMMQService.UavMMQFindByIds:output_type -> uavclient.UavMMQFindByIdsResp
	37, // [37:65] is the sub-list for method output_type
	9,  // [9:37] is the sub-list for method input_type
	9,  // [9:9] is the sub-list for extension type_name
	9,  // [9:9] is the sub-list for extension extendee
	0,  // [0:9] is the sub-list for field type_name
}

func init() { file_uav_proto_init() }
func file_uav_proto_init() {
	if File_uav_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_uav_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UavDeviceAddReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_uav_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UavDeviceAddResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_uav_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UavDeviceListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_uav_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UavDeviceListData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_uav_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UavControlData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_uav_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UavDeviceListResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_uav_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UavDeviceFindByIdReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_uav_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UavDeviceFindByIdResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_uav_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UavFlyData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_uav_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UavAlertData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_uav_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UavDeviceFindByIdsReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_uav_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UavDeviceFindByIdsResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_uav_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddUavFlyReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_uav_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddUavFlyResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_uav_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UavFlyAddResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_uav_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListUavFlyReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_uav_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListtUavFlyData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_uav_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListUavFlyResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_uav_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateUavFlyReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_uav_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateUavFlyResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_uav_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UavFlyFindByIdReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_uav_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteUavFlyReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_uav_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteUavFlyResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_uav_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddUavHistoryReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_uav_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddUavHistoryResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_uav_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UavHistoryAddResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_uav_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListUavHistoryReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_uav_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListtUavHistoryData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_uav_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListUavHistoryResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_uav_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateUavHistoryReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_uav_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateUavHistoryResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_uav_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UavHistoryFindByIdReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_uav_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteUavHistoryReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_uav_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteUavHistoryResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_uav_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddUavNetworkReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_uav_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddUavNetworkResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_uav_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UavNetworkAddResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_uav_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListUavNetworkReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_uav_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListtUavNetworkData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_uav_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListUavNetworkResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_uav_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateUavNetworkReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_uav_proto_msgTypes[41].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateUavNetworkResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_uav_proto_msgTypes[42].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UavNetworkFindByIdReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_uav_proto_msgTypes[43].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteUavNetworkReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_uav_proto_msgTypes[44].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteUavNetworkResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_uav_proto_msgTypes[45].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddUavPeopleReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_uav_proto_msgTypes[46].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddUavPeopleResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_uav_proto_msgTypes[47].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UavPeopleAddResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_uav_proto_msgTypes[48].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListUavPeopleReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_uav_proto_msgTypes[49].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListtUavPeopleData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_uav_proto_msgTypes[50].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListUavPeopleResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_uav_proto_msgTypes[51].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateUavPeopleReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_uav_proto_msgTypes[52].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateUavPeopleResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_uav_proto_msgTypes[53].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UavPeopleFindByIdReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_uav_proto_msgTypes[54].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteUavPeopleReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_uav_proto_msgTypes[55].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteUavPeopleResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_uav_proto_msgTypes[56].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddUavPlanReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_uav_proto_msgTypes[57].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddUavPlanResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_uav_proto_msgTypes[58].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UavPlanAddResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_uav_proto_msgTypes[59].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListUavPlanReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_uav_proto_msgTypes[60].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListtUavPlanData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_uav_proto_msgTypes[61].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListUavPlanResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_uav_proto_msgTypes[62].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateUavPlanReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_uav_proto_msgTypes[63].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateUavPlanResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_uav_proto_msgTypes[64].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UavPlanFindByIdReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_uav_proto_msgTypes[65].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteUavPlanReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_uav_proto_msgTypes[66].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteUavPlanResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_uav_proto_msgTypes[67].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UavMMQAddReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_uav_proto_msgTypes[68].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UavMMQAddResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_uav_proto_msgTypes[69].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UavMMQListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_uav_proto_msgTypes[70].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UavMMQListData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_uav_proto_msgTypes[71].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UavMMQListResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_uav_proto_msgTypes[72].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UavMMQFindByIdReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_uav_proto_msgTypes[73].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UavMMQFindByIdResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_uav_proto_msgTypes[74].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UavMMQFindByIdsReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_uav_proto_msgTypes[75].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UavMMQFindByIdsResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_uav_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   76,
			NumExtensions: 0,
			NumServices:   7,
		},
		GoTypes:           file_uav_proto_goTypes,
		DependencyIndexes: file_uav_proto_depIdxs,
		MessageInfos:      file_uav_proto_msgTypes,
	}.Build()
	File_uav_proto = out.File
	file_uav_proto_rawDesc = nil
	file_uav_proto_goTypes = nil
	file_uav_proto_depIdxs = nil
}
