// Code generated by goctl. DO NOT EDIT.
// Source: ums.proto

package server

import (
	"context"

	"zero-admin/rpc/ums/internal/logic/integrationconsumesettingservice"
	"zero-admin/rpc/ums/internal/svc"
	"zero-admin/rpc/ums/umsclient"
)

type IntegrationConsumeSettingServiceServer struct {
	svcCtx *svc.ServiceContext
	umsclient.UnimplementedIntegrationConsumeSettingServiceServer
}

func NewIntegrationConsumeSettingServiceServer(svcCtx *svc.ServiceContext) *IntegrationConsumeSettingServiceServer {
	return &IntegrationConsumeSettingServiceServer{
		svcCtx: svcCtx,
	}
}

func (s *IntegrationConsumeSettingServiceServer) IntegrationConsumeSettingAdd(ctx context.Context, in *umsclient.IntegrationConsumeSettingAddReq) (*umsclient.IntegrationConsumeSettingAddResp, error) {
	l := integrationconsumesettingservicelogic.NewIntegrationConsumeSettingAddLogic(ctx, s.svcCtx)
	return l.IntegrationConsumeSettingAdd(in)
}

func (s *IntegrationConsumeSettingServiceServer) IntegrationConsumeSettingList(ctx context.Context, in *umsclient.IntegrationConsumeSettingListReq) (*umsclient.IntegrationConsumeSettingListResp, error) {
	l := integrationconsumesettingservicelogic.NewIntegrationConsumeSettingListLogic(ctx, s.svcCtx)
	return l.IntegrationConsumeSettingList(in)
}

func (s *IntegrationConsumeSettingServiceServer) IntegrationConsumeSettingUpdate(ctx context.Context, in *umsclient.IntegrationConsumeSettingUpdateReq) (*umsclient.IntegrationConsumeSettingUpdateResp, error) {
	l := integrationconsumesettingservicelogic.NewIntegrationConsumeSettingUpdateLogic(ctx, s.svcCtx)
	return l.IntegrationConsumeSettingUpdate(in)
}

func (s *IntegrationConsumeSettingServiceServer) IntegrationConsumeSettingDelete(ctx context.Context, in *umsclient.IntegrationConsumeSettingDeleteReq) (*umsclient.IntegrationConsumeSettingDeleteResp, error) {
	l := integrationconsumesettingservicelogic.NewIntegrationConsumeSettingDeleteLogic(ctx, s.svcCtx)
	return l.IntegrationConsumeSettingDelete(in)
}
