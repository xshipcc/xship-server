// Code generated by goctl. DO NOT EDIT.
// Source: ums.proto

package server

import (
	"context"

	"zero-admin/rpc/ums/internal/logic/memberlevelservice"
	"zero-admin/rpc/ums/internal/svc"
	"zero-admin/rpc/ums/umsclient"
)

type MemberLevelServiceServer struct {
	svcCtx *svc.ServiceContext
	umsclient.UnimplementedMemberLevelServiceServer
}

func NewMemberLevelServiceServer(svcCtx *svc.ServiceContext) *MemberLevelServiceServer {
	return &MemberLevelServiceServer{
		svcCtx: svcCtx,
	}
}

func (s *MemberLevelServiceServer) MemberLevelAdd(ctx context.Context, in *umsclient.MemberLevelAddReq) (*umsclient.MemberLevelAddResp, error) {
	l := memberlevelservicelogic.NewMemberLevelAddLogic(ctx, s.svcCtx)
	return l.MemberLevelAdd(in)
}

func (s *MemberLevelServiceServer) MemberLevelList(ctx context.Context, in *umsclient.MemberLevelListReq) (*umsclient.MemberLevelListResp, error) {
	l := memberlevelservicelogic.NewMemberLevelListLogic(ctx, s.svcCtx)
	return l.MemberLevelList(in)
}

func (s *MemberLevelServiceServer) MemberLevelUpdate(ctx context.Context, in *umsclient.MemberLevelUpdateReq) (*umsclient.MemberLevelUpdateResp, error) {
	l := memberlevelservicelogic.NewMemberLevelUpdateLogic(ctx, s.svcCtx)
	return l.MemberLevelUpdate(in)
}

func (s *MemberLevelServiceServer) MemberLevelDelete(ctx context.Context, in *umsclient.MemberLevelDeleteReq) (*umsclient.MemberLevelDeleteResp, error) {
	l := memberlevelservicelogic.NewMemberLevelDeleteLogic(ctx, s.svcCtx)
	return l.MemberLevelDelete(in)
}
