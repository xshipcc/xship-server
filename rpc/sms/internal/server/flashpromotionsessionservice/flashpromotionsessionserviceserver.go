// Code generated by goctl. DO NOT EDIT.
// Source: sms.proto

package server

import (
	"context"

	"zero-admin/rpc/sms/internal/logic/flashpromotionsessionservice"
	"zero-admin/rpc/sms/internal/svc"
	"zero-admin/rpc/sms/smsclient"
)

type FlashPromotionSessionServiceServer struct {
	svcCtx *svc.ServiceContext
	smsclient.UnimplementedFlashPromotionSessionServiceServer
}

func NewFlashPromotionSessionServiceServer(svcCtx *svc.ServiceContext) *FlashPromotionSessionServiceServer {
	return &FlashPromotionSessionServiceServer{
		svcCtx: svcCtx,
	}
}

func (s *FlashPromotionSessionServiceServer) FlashPromotionSessionAdd(ctx context.Context, in *smsclient.FlashPromotionSessionAddReq) (*smsclient.FlashPromotionSessionAddResp, error) {
	l := flashpromotionsessionservicelogic.NewFlashPromotionSessionAddLogic(ctx, s.svcCtx)
	return l.FlashPromotionSessionAdd(in)
}

func (s *FlashPromotionSessionServiceServer) FlashPromotionSessionList(ctx context.Context, in *smsclient.FlashPromotionSessionListReq) (*smsclient.FlashPromotionSessionListResp, error) {
	l := flashpromotionsessionservicelogic.NewFlashPromotionSessionListLogic(ctx, s.svcCtx)
	return l.FlashPromotionSessionList(in)
}

func (s *FlashPromotionSessionServiceServer) FlashPromotionSessionUpdate(ctx context.Context, in *smsclient.FlashPromotionSessionUpdateReq) (*smsclient.FlashPromotionSessionUpdateResp, error) {
	l := flashpromotionsessionservicelogic.NewFlashPromotionSessionUpdateLogic(ctx, s.svcCtx)
	return l.FlashPromotionSessionUpdate(in)
}

func (s *FlashPromotionSessionServiceServer) FlashPromotionSessionDelete(ctx context.Context, in *smsclient.FlashPromotionSessionDeleteReq) (*smsclient.FlashPromotionSessionDeleteResp, error) {
	l := flashpromotionsessionservicelogic.NewFlashPromotionSessionDeleteLogic(ctx, s.svcCtx)
	return l.FlashPromotionSessionDelete(in)
}

func (s *FlashPromotionSessionServiceServer) FlashPromotionSessionByTime(ctx context.Context, in *smsclient.FlashPromotionSessionByTimeReq) (*smsclient.FlashPromotionSessionByTimeResp, error) {
	l := flashpromotionsessionservicelogic.NewFlashPromotionSessionByTimeLogic(ctx, s.svcCtx)
	return l.FlashPromotionSessionByTime(in)
}
