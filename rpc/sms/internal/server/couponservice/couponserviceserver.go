// Code generated by goctl. DO NOT EDIT.
// Source: sms.proto

package server

import (
	"context"

	"zero-admin/rpc/sms/internal/logic/couponservice"
	"zero-admin/rpc/sms/internal/svc"
	"zero-admin/rpc/sms/smsclient"
)

type CouponServiceServer struct {
	svcCtx *svc.ServiceContext
	smsclient.UnimplementedCouponServiceServer
}

func NewCouponServiceServer(svcCtx *svc.ServiceContext) *CouponServiceServer {
	return &CouponServiceServer{
		svcCtx: svcCtx,
	}
}

func (s *CouponServiceServer) CouponAdd(ctx context.Context, in *smsclient.CouponAddReq) (*smsclient.CouponAddResp, error) {
	l := couponservicelogic.NewCouponAddLogic(ctx, s.svcCtx)
	return l.CouponAdd(in)
}

func (s *CouponServiceServer) CouponList(ctx context.Context, in *smsclient.CouponListReq) (*smsclient.CouponListResp, error) {
	l := couponservicelogic.NewCouponListLogic(ctx, s.svcCtx)
	return l.CouponList(in)
}

func (s *CouponServiceServer) CouponUpdate(ctx context.Context, in *smsclient.CouponUpdateReq) (*smsclient.CouponUpdateResp, error) {
	l := couponservicelogic.NewCouponUpdateLogic(ctx, s.svcCtx)
	return l.CouponUpdate(in)
}

func (s *CouponServiceServer) CouponDelete(ctx context.Context, in *smsclient.CouponDeleteReq) (*smsclient.CouponDeleteResp, error) {
	l := couponservicelogic.NewCouponDeleteLogic(ctx, s.svcCtx)
	return l.CouponDelete(in)
}

// 根据优惠券id查询优惠券
func (s *CouponServiceServer) CouponFindById(ctx context.Context, in *smsclient.CouponFindByIdReq) (*smsclient.CouponFindByIdResp, error) {
	l := couponservicelogic.NewCouponFindByIdLogic(ctx, s.svcCtx)
	return l.CouponFindById(in)
}

// 根据优惠券ids查询优惠券
func (s *CouponServiceServer) CouponFindByIds(ctx context.Context, in *smsclient.CouponFindByIdsReq) (*smsclient.CouponFindByIdsResp, error) {
	l := couponservicelogic.NewCouponFindByIdsLogic(ctx, s.svcCtx)
	return l.CouponFindByIds(in)
}
