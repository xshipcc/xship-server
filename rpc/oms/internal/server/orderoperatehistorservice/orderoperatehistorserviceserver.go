// Code generated by goctl. DO NOT EDIT.
// Source: oms.proto

package server

import (
	"context"

	"zero-admin/rpc/oms/internal/logic/orderoperatehistorservice"
	"zero-admin/rpc/oms/internal/svc"
	"zero-admin/rpc/oms/omsclient"
)

type OrderOperateHistorServiceServer struct {
	svcCtx *svc.ServiceContext
	omsclient.UnimplementedOrderOperateHistorServiceServer
}

func NewOrderOperateHistorServiceServer(svcCtx *svc.ServiceContext) *OrderOperateHistorServiceServer {
	return &OrderOperateHistorServiceServer{
		svcCtx: svcCtx,
	}
}

func (s *OrderOperateHistorServiceServer) OrderOperateHistoryAdd(ctx context.Context, in *omsclient.OrderOperateHistoryAddReq) (*omsclient.OrderOperateHistoryAddResp, error) {
	l := orderoperatehistorservicelogic.NewOrderOperateHistoryAddLogic(ctx, s.svcCtx)
	return l.OrderOperateHistoryAdd(in)
}

func (s *OrderOperateHistorServiceServer) OrderOperateHistoryList(ctx context.Context, in *omsclient.OrderOperateHistoryListReq) (*omsclient.OrderOperateHistoryListResp, error) {
	l := orderoperatehistorservicelogic.NewOrderOperateHistoryListLogic(ctx, s.svcCtx)
	return l.OrderOperateHistoryList(in)
}

func (s *OrderOperateHistorServiceServer) OrderOperateHistoryUpdate(ctx context.Context, in *omsclient.OrderOperateHistoryUpdateReq) (*omsclient.OrderOperateHistoryUpdateResp, error) {
	l := orderoperatehistorservicelogic.NewOrderOperateHistoryUpdateLogic(ctx, s.svcCtx)
	return l.OrderOperateHistoryUpdate(in)
}

func (s *OrderOperateHistorServiceServer) OrderOperateHistoryDelete(ctx context.Context, in *omsclient.OrderOperateHistoryDeleteReq) (*omsclient.OrderOperateHistoryDeleteResp, error) {
	l := orderoperatehistorservicelogic.NewOrderOperateHistoryDeleteLogic(ctx, s.svcCtx)
	return l.OrderOperateHistoryDelete(in)
}
