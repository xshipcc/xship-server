// Code generated by goctl. DO NOT EDIT.
// Source: oms.proto

package server

import (
	"context"

	"zero-admin/rpc/oms/internal/logic/orderservice"
	"zero-admin/rpc/oms/internal/svc"
	"zero-admin/rpc/oms/omsclient"
)

type OrderServiceServer struct {
	svcCtx *svc.ServiceContext
	omsclient.UnimplementedOrderServiceServer
}

func NewOrderServiceServer(svcCtx *svc.ServiceContext) *OrderServiceServer {
	return &OrderServiceServer{
		svcCtx: svcCtx,
	}
}

func (s *OrderServiceServer) OrderAdd(ctx context.Context, in *omsclient.OrderAddReq) (*omsclient.OrderAddResp, error) {
	l := orderservicelogic.NewOrderAddLogic(ctx, s.svcCtx)
	return l.OrderAdd(in)
}

func (s *OrderServiceServer) OrderList(ctx context.Context, in *omsclient.OrderListReq) (*omsclient.OrderListResp, error) {
	l := orderservicelogic.NewOrderListLogic(ctx, s.svcCtx)
	return l.OrderList(in)
}

func (s *OrderServiceServer) OrderUpdate(ctx context.Context, in *omsclient.OrderUpdateReq) (*omsclient.OrderUpdateResp, error) {
	l := orderservicelogic.NewOrderUpdateLogic(ctx, s.svcCtx)
	return l.OrderUpdate(in)
}

func (s *OrderServiceServer) OrderDelete(ctx context.Context, in *omsclient.OrderDeleteReq) (*omsclient.OrderDeleteResp, error) {
	l := orderservicelogic.NewOrderDeleteLogic(ctx, s.svcCtx)
	return l.OrderDelete(in)
}

func (s *OrderServiceServer) OrderListByMemberId(ctx context.Context, in *omsclient.OrderListByMemberIdReq) (*omsclient.OrderListByMemberIdResp, error) {
	l := orderservicelogic.NewOrderListByMemberIdLogic(ctx, s.svcCtx)
	return l.OrderListByMemberId(in)
}

func (s *OrderServiceServer) OrderCancel(ctx context.Context, in *omsclient.OrderCancelReq) (*omsclient.OrderCancelResp, error) {
	l := orderservicelogic.NewOrderCancelLogic(ctx, s.svcCtx)
	return l.OrderCancel(in)
}

func (s *OrderServiceServer) OrderConfirm(ctx context.Context, in *omsclient.OrderConfirmReq) (*omsclient.OrderConfirmResp, error) {
	l := orderservicelogic.NewOrderConfirmLogic(ctx, s.svcCtx)
	return l.OrderConfirm(in)
}

func (s *OrderServiceServer) OrderRefund(ctx context.Context, in *omsclient.OrderRefundReq) (*omsclient.OrderRefundResp, error) {
	l := orderservicelogic.NewOrderRefundLogic(ctx, s.svcCtx)
	return l.OrderRefund(in)
}

func (s *OrderServiceServer) OrderDeleteById(ctx context.Context, in *omsclient.OrderDeleteByIdReq) (*omsclient.OrderDeleteResp, error) {
	l := orderservicelogic.NewOrderDeleteByIdLogic(ctx, s.svcCtx)
	return l.OrderDeleteById(in)
}
