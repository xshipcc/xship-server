// Code generated by goctl. DO NOT EDIT.
// Source: cms.proto

package server

import (
	"context"

	"zero-admin/rpc/cms/cmsclient"
	"zero-admin/rpc/cms/internal/logic/subjectservice"
	"zero-admin/rpc/cms/internal/svc"
)

type SubjectServiceServer struct {
	svcCtx *svc.ServiceContext
	cmsclient.UnimplementedSubjectServiceServer
}

func NewSubjectServiceServer(svcCtx *svc.ServiceContext) *SubjectServiceServer {
	return &SubjectServiceServer{
		svcCtx: svcCtx,
	}
}

// 专题
func (s *SubjectServiceServer) SubjectAdd(ctx context.Context, in *cmsclient.SubjectAddReq) (*cmsclient.SubjectAddResp, error) {
	l := subjectservicelogic.NewSubjectAddLogic(ctx, s.svcCtx)
	return l.SubjectAdd(in)
}

func (s *SubjectServiceServer) SubjectDelete(ctx context.Context, in *cmsclient.SubjectDeleteReq) (*cmsclient.SubjectDeleteResp, error) {
	l := subjectservicelogic.NewSubjectDeleteLogic(ctx, s.svcCtx)
	return l.SubjectDelete(in)
}

func (s *SubjectServiceServer) SubjectUpdate(ctx context.Context, in *cmsclient.SubjectUpdateReq) (*cmsclient.SubjectUpdateResp, error) {
	l := subjectservicelogic.NewSubjectUpdateLogic(ctx, s.svcCtx)
	return l.SubjectUpdate(in)
}

func (s *SubjectServiceServer) SubjectList(ctx context.Context, in *cmsclient.SubjectListReq) (*cmsclient.SubjectListResp, error) {
	l := subjectservicelogic.NewSubjectListLogic(ctx, s.svcCtx)
	return l.SubjectList(in)
}

func (s *SubjectServiceServer) SubjectListByIds(ctx context.Context, in *cmsclient.SubjectListByIdsReq) (*cmsclient.SubjectListResp, error) {
	l := subjectservicelogic.NewSubjectListByIdsLogic(ctx, s.svcCtx)
	return l.SubjectListByIds(in)
}
