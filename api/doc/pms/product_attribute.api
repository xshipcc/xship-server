info(
	desc: "属性分类"
	author: "magix"
	email: "22333678@qq.com"
)

type (
	addProductAttributeReq {
		ProductAttributeCategoryId int64  `json:"productAttributeCategoryId"` // 属性分类id
		Name                       string `json:"name"`
		SelectType                 int64  `json:"selectType"`         // 属性选择类型：0->唯一；1->单选；2->多选
		InputType                  int64  `json:"inputType"`          // 属性录入方式：0->手工录入；1->从列表中选取
		InputList                  string `json:"inputList,optional"` // 可选值列表，以逗号隔开
		Sort                       int64  `json:"sort"`               // 排序字段：最高的可以单独上传图片
		FilterType                 int64  `json:"filterType"`         // 分类筛选样式：1->普通；1->颜色
		SearchType                 int64  `json:"searchType"`         // 检索类型；0->不需要进行检索；1->关键字检索；2->范围检索
		RelatedStatus              int64  `json:"relatedStatus"`      // 相同属性产品是否关联；0->不关联；1->关联
		HandAddStatus              int64  `json:"handAddStatus"`      // 是否支持手动新增；0->不支持；1->支持
		Type                       int64  `json:"type"`               // 属性的类型；0->规格；1->参数
	}
	addProductAttributeResp {
		Code    string `json:"code"`
		Message string `json:"message"`
	}
	ListProductAttributeReq {
		Current                    int64  `json:"current,default=1"`
		PageSize                   int64  `json:"pageSize,default=20"`
		Name                       string `json:"name,optional"`
		Type                       int64  `json:"type,default=2"` // 属性的类型；0->规格；1->参数
		ProductAttributeCategoryId int64  `json:"productAttributeCategoryId,default=0"`
	}
	ListtProductAttributeData {
		Id                         int64  `json:"id"`
		ProductAttributeCategoryId int64  `json:"productAttributeCategoryId"`
		Name                       string `json:"name"`
		SelectType                 int64  `json:"selectType"`    // 属性选择类型：0->唯一；1->单选；2->多选
		InputType                  int64  `json:"inputType"`     // 属性录入方式：0->手工录入；1->从列表中选取
		InputList                  string `json:"inputList"`     // 可选值列表，以逗号隔开
		Sort                       int64  `json:"sort"`          // 排序字段：最高的可以单独上传图片
		FilterType                 int64  `json:"filterType"`    // 分类筛选样式：1->普通；1->颜色
		SearchType                 int64  `json:"searchType"`    // 检索类型；0->不需要进行检索；1->关键字检索；2->范围检索
		RelatedStatus              int64  `json:"relatedStatus"` // 相同属性产品是否关联；0->不关联；1->关联
		HandAddStatus              int64  `json:"handAddStatus"` // 是否支持手动新增；0->不支持；1->支持
		Type                       int64  `json:"type"`          // 属性的类型；0->规格；1->参数
	}
	ListProductAttributeResp {
		Code     string                       `json:"code"`
		Message  string                       `json:"message"`
		Current  int64                        `json:"current,default=1"`
		Data     []*ListtProductAttributeData `json:"data"`
		PageSize int64                        `json:"pageSize,default=20"`
		Success  bool                         `json:"success"`
		Total    int64                        `json:"total"`
	}
	UpdateProductAttributeReq {
		Id                         int64  `json:"id"`
		ProductAttributeCategoryId int64  `json:"productAttributeCategoryId"`
		Name                       string `json:"name"`
		SelectType                 int64  `json:"selectType"`         // 属性选择类型：0->唯一；1->单选；2->多选
		InputType                  int64  `json:"inputType"`          // 属性录入方式：0->手工录入；1->从列表中选取
		InputList                  string `json:"inputList,optional"` // 可选值列表，以逗号隔开
		Sort                       int64  `json:"sort"`               // 排序字段：最高的可以单独上传图片
		FilterType                 int64  `json:"filterType"`         // 分类筛选样式：1->普通；1->颜色
		SearchType                 int64  `json:"searchType"`         // 检索类型；0->不需要进行检索；1->关键字检索；2->范围检索
		RelatedStatus              int64  `json:"relatedStatus"`      // 相同属性产品是否关联；0->不关联；1->关联
		HandAddStatus              int64  `json:"handAddStatus"`      // 是否支持手动新增；0->不支持；1->支持
		Type                       int64  `json:"type"`               // 属性的类型；0->规格；1->参数
	}
	UpdateProductAttributeResp {
		Code    string `json:"code"`
		Message string `json:"message"`
	}
	DeleteProductAttributeReq {
		Ids []int64 `json:"ids"`
	}
	DeleteProductAttributeResp {
		Code    string `json:"code"`
		Message string `json:"message"`
	}
)

@server(
	jwt: Auth
	middleware: CheckUrl
	group: product/attribute
	prefix: /api/product/attribute
)
service admin-api {
	@handler ProductAttributeAdd
	post /add (addProductAttributeReq) returns (addProductAttributeResp)
	
	@handler ProductAttributeList
	post /list (ListProductAttributeReq) returns (ListProductAttributeResp)
	
	@handler ProductAttributeUpdate
	post /update (UpdateProductAttributeReq) returns (UpdateProductAttributeResp)
	
	@handler ProductAttributeDelete
	post /delete (DeleteProductAttributeReq) returns (DeleteProductAttributeResp)
}